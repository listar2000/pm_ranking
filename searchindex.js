Search.setIndex({"alltitles": {"API Reference": [[3, null]], "Attributes": [[0, "attributes"], [2, "attributes"], [4, "attributes"], [5, "attributes"], [6, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"]], "Averaged Return: what practitioners might care about": [[22, "averaged-return-what-practitioners-might-care-about"]], "Classes": [[2, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"]], "Colab Demo": [[24, null]], "Core Concepts": [[25, "core-concepts"]], "Functions": [[0, "functions"], [1, "functions"], [2, "functions"], [4, "functions"], [5, "functions"], [9, "functions"], [10, "functions"], [14, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [21, "functions"]], "Generalized Bradley\u2013Terry (BT) Model": [[22, "generalized-bradleyterry-bt-model"]], "How We Score & Rank LLMs in Prophet Arena": [[22, null]], "IRT & Bradley-Terry: lens of statistical modeling": [[22, "irt-bradley-terry-lens-of-statistical-modeling"]], "IRT \u4e0e Bradley-Terry\uff1a\u7edf\u8ba1\u5efa\u6a21\u7684\u89c6\u89d2": [[23, "irt-bradley-terry"]], "Interactive Demo on Google Colab": [[24, "interactive-demo-on-google-colab"]], "Item Response Theory (IRT)": [[22, "item-response-theory-irt"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"]], "PM-RANK Documentation": [[25, null]], "Package Contents": [[7, "package-contents"], [10, "package-contents"], [14, "package-contents"], [15, "package-contents"]], "Quick Installation Guide": [[25, "quick-installation-guide"]], "References:": [[22, "references"]], "Scoring Rules: grounded metric for probabilistic predictions": [[22, "scoring-rules-grounded-metric-for-probabilistic-predictions"]], "Submodules": [[7, "submodules"], [10, "submodules"], [14, "submodules"]], "TL;DR (for readers in a hurry)": [[22, "tl-dr-for-readers-in-a-hurry"]], "TL;DR\uff08\u7ed9\u65f6\u95f4\u7d27\u8feb\u7684\u8bfb\u8005\uff09": [[23, "tl-dr"]], "algo": [[0, null]], "bootstrap": [[1, null]], "data": [[2, null]], "plot": [[4, null]], "plot_timestamp": [[5, null]], "src.pm_rank": [[10, null]], "src.pm_rank.data": [[7, null]], "src.pm_rank.data.base": [[6, null]], "src.pm_rank.data.loaders": [[8, null]], "src.pm_rank.data.utils": [[9, null]], "src.pm_rank.model": [[14, null]], "src.pm_rank.model.average_return": [[11, null]], "src.pm_rank.model.bradley_terry": [[12, null]], "src.pm_rank.model.calibration": [[13, null]], "src.pm_rank.model.irt": [[15, null]], "src.pm_rank.model.scoring_rule": [[16, null]], "src.pm_rank.model.utils": [[17, null]], "test_algo": [[18, null]], "test_bootstrap": [[19, null]], "test_calibration": [[20, null]], "utils": [[21, null]], "\u53c2\u8003\u6587\u732e\uff1a": [[23, "id4"]], "\u5e73\u5747\u56de\u62a5\uff1a\u5b9e\u8df5\u8005\u53ef\u80fd\u5173\u5fc3\u7684\u5185\u5bb9": [[23, "id2"]], "\u5e7f\u4e49 Bradley\u2013Terry\uff08BT\uff09\u6a21\u578b": [[23, "bradleyterry-bt"]], "\u6211\u4eec\u5982\u4f55\u5728\u9884\u6d4b\u5e02\u573a\u4e2d\u5bf9\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u8fdb\u884c\u8bc4\u5206\u4e0e\u6392\u540d": [[23, null]], "\u8bc4\u5206\u89c4\u5219\uff1a\u6982\u7387\u6027\u9884\u6d4b\u7684\u575a\u5b9e\u6307\u6807": [[23, "id1"]], "\u9879\u76ee\u53cd\u5e94\u7406\u8bba\uff08IRT\uff09": [[23, "irt"]], "\ud83d\udcad Absolute versus relative metrics": [[22, "absolute-versus-relative-metrics"]], "\ud83d\udcad \u7edd\u5bf9\u6307\u6807\u4e0e\u76f8\u5bf9\u6307\u6807": [[23, "id3"]], "\ud83e\udd14 Example: When Would Absolute and Relative Metrics Differ?": [[22, "example-when-would-absolute-and-relative-metrics-differ"]]}, "docnames": ["autoapi/algo/index", "autoapi/bootstrap/index", "autoapi/data/index", "autoapi/index", "autoapi/plot/index", "autoapi/plot_timestamp/index", "autoapi/src/pm_rank/data/base/index", "autoapi/src/pm_rank/data/index", "autoapi/src/pm_rank/data/loaders/index", "autoapi/src/pm_rank/data/utils/index", "autoapi/src/pm_rank/index", "autoapi/src/pm_rank/model/average_return/index", "autoapi/src/pm_rank/model/bradley_terry/index", "autoapi/src/pm_rank/model/calibration/index", "autoapi/src/pm_rank/model/index", "autoapi/src/pm_rank/model/irt/index", "autoapi/src/pm_rank/model/scoring_rule/index", "autoapi/src/pm_rank/model/utils/index", "autoapi/test_algo/index", "autoapi/test_bootstrap/index", "autoapi/test_calibration/index", "autoapi/utils/index", "blogpost/ranking_llm_250727", "blogpost/ranking_llm_250727_cn", "colab_demo", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["autoapi/algo/index.rst", "autoapi/bootstrap/index.rst", "autoapi/data/index.rst", "autoapi/index.rst", "autoapi/plot/index.rst", "autoapi/plot_timestamp/index.rst", "autoapi/src/pm_rank/data/base/index.rst", "autoapi/src/pm_rank/data/index.rst", "autoapi/src/pm_rank/data/loaders/index.rst", "autoapi/src/pm_rank/data/utils/index.rst", "autoapi/src/pm_rank/index.rst", "autoapi/src/pm_rank/model/average_return/index.rst", "autoapi/src/pm_rank/model/bradley_terry/index.rst", "autoapi/src/pm_rank/model/calibration/index.rst", "autoapi/src/pm_rank/model/index.rst", "autoapi/src/pm_rank/model/irt/index.rst", "autoapi/src/pm_rank/model/scoring_rule/index.rst", "autoapi/src/pm_rank/model/utils/index.rst", "autoapi/test_algo/index.rst", "autoapi/test_bootstrap/index.rst", "autoapi/test_calibration/index.rst", "autoapi/utils/index.rst", "blogpost/ranking_llm_250727.md", "blogpost/ranking_llm_250727_cn.md", "colab_demo.rst", "index.rst"], "indexentries": {"__getitem__() (src.pm_rank.model.average_return.averagereturnconfig method)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.__getitem__", false]], "__getitem__() (src.pm_rank.model.averagereturnconfig method)": [[14, "src.pm_rank.model.AverageReturnConfig.__getitem__", false]], "__post_init__() (src.pm_rank.model.average_return.averagereturnconfig method)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.__post_init__", false]], "__post_init__() (src.pm_rank.model.averagereturnconfig method)": [[14, "src.pm_rank.model.AverageReturnConfig.__post_init__", false]], "__setitem__() (src.pm_rank.model.average_return.averagereturnconfig method)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.__setitem__", false]], "__setitem__() (src.pm_rank.model.averagereturnconfig method)": [[14, "src.pm_rank.model.AverageReturnConfig.__setitem__", false]], "add_market_baseline_predictions() (in module algo)": [[0, "algo.add_market_baseline_predictions", false]], "aggregate_fns (in module src.pm_rank.model.utils)": [[17, "src.pm_rank.model.utils.AGGREGATE_FNS", false]], "algo": [[0, "module-algo", false]], "anchor_points (src.pm_rank.model.irt.irtobs attribute)": [[15, "src.pm_rank.model.irt.IRTObs.anchor_points", false]], "assign_time_bins() (in module utils)": [[21, "utils.assign_time_bins", false]], "averagereturn (class in src.pm_rank)": [[10, "src.pm_rank.AverageReturn", false]], "averagereturn (class in src.pm_rank.model)": [[14, "src.pm_rank.model.AverageReturn", false]], "averagereturn (class in src.pm_rank.model.average_return)": [[11, "src.pm_rank.model.average_return.AverageReturn", false]], "averagereturnconfig (class in src.pm_rank.model)": [[14, "src.pm_rank.model.AverageReturnConfig", false]], "averagereturnconfig (class in src.pm_rank.model.average_return)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig", false]], "bootstrap": [[1, "module-bootstrap", false]], "bootstrap_ci_config (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.bootstrap_ci_config", false]], "bootstrap_ci_config (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.bootstrap_ci_config", false]], "bootstrap_ci_config (src.pm_rank.model.average_return.averagereturnconfig attribute)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.bootstrap_ci_config", false]], "bootstrap_ci_config (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.bootstrap_ci_config", false]], "bootstrap_ci_config (src.pm_rank.model.averagereturnconfig attribute)": [[14, "src.pm_rank.model.AverageReturnConfig.bootstrap_ci_config", false]], "bootstrap_ci_level (src.pm_rank.model.utils.bootstrapciconfig attribute)": [[17, "src.pm_rank.model.utils.BootstrapCIConfig.bootstrap_ci_level", false]], "bootstrapciconfig (class in src.pm_rank.model.utils)": [[17, "src.pm_rank.model.utils.BootstrapCIConfig", false]], "break_tie_by_uniform (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.break_tie_by_uniform", false]], "break_tie_by_uniform (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.break_tie_by_uniform", false]], "break_tie_by_uniform (src.pm_rank.model.average_return.averagereturnconfig attribute)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.break_tie_by_uniform", false]], "break_tie_by_uniform (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.break_tie_by_uniform", false]], "break_tie_by_uniform (src.pm_rank.model.averagereturnconfig attribute)": [[14, "src.pm_rank.model.AverageReturnConfig.break_tie_by_uniform", false]], "brierscoringrule (class in src.pm_rank)": [[10, "src.pm_rank.BrierScoringRule", false]], "brierscoringrule (class in src.pm_rank.model)": [[14, "src.pm_rank.model.BrierScoringRule", false]], "brierscoringrule (class in src.pm_rank.model.scoring_rule)": [[16, "src.pm_rank.model.scoring_rule.BrierScoringRule", false]], "calculate_time_to_last_submission() (in module utils)": [[21, "utils.calculate_time_to_last_submission", false]], "calibrationmetric (class in src.pm_rank)": [[10, "src.pm_rank.CalibrationMetric", false]], "calibrationmetric (class in src.pm_rank.model)": [[14, "src.pm_rank.model.CalibrationMetric", false]], "calibrationmetric (class in src.pm_rank.model.calibration)": [[13, "src.pm_rank.model.calibration.CalibrationMetric", false]], "categories (src.pm_rank.data.base.forecastchallenge attribute)": [[6, "src.pm_rank.data.base.ForecastChallenge.categories", false]], "categories (src.pm_rank.data.forecastchallenge attribute)": [[7, "src.pm_rank.data.ForecastChallenge.categories", false]], "categories (src.pm_rank.forecastchallenge attribute)": [[10, "src.pm_rank.ForecastChallenge.categories", false]], "category (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.category", false]], "category (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.category", false]], "category (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.category", false]], "challenge_title (src.pm_rank.data.gjochallengeloader attribute)": [[7, "src.pm_rank.data.GJOChallengeLoader.challenge_title", false]], "challenge_title (src.pm_rank.data.loaders.gjochallengeloader attribute)": [[8, "src.pm_rank.data.loaders.GJOChallengeLoader.challenge_title", false]], "challenge_title (src.pm_rank.data.loaders.prophetarenachallengeloader attribute)": [[8, "src.pm_rank.data.loaders.ProphetArenaChallengeLoader.challenge_title", false]], "challenge_title (src.pm_rank.gjochallengeloader attribute)": [[10, "src.pm_rank.GJOChallengeLoader.challenge_title", false]], "challenge_title (src.pm_rank.prophetarenachallengeloader attribute)": [[10, "src.pm_rank.ProphetArenaChallengeLoader.challenge_title", false]], "challengeloader (class in src.pm_rank)": [[10, "src.pm_rank.ChallengeLoader", false]], "challengeloader (class in src.pm_rank.data)": [[7, "src.pm_rank.data.ChallengeLoader", false]], "challengeloader (class in src.pm_rank.data.base)": [[6, "src.pm_rank.data.base.ChallengeLoader", false]], "clip_prob (src.pm_rank.logscoringrule attribute)": [[10, "src.pm_rank.LogScoringRule.clip_prob", false]], "clip_prob (src.pm_rank.model.logscoringrule attribute)": [[14, "src.pm_rank.model.LogScoringRule.clip_prob", false]], "clip_prob (src.pm_rank.model.scoring_rule.logscoringrule attribute)": [[16, "src.pm_rank.model.scoring_rule.LogScoringRule.clip_prob", false]], "compute_average_return_neutral() (in module algo)": [[0, "algo.compute_average_return_neutral", false]], "compute_bootstrap_ci() (in module bootstrap)": [[1, "bootstrap.compute_bootstrap_ci", false]], "compute_brier_score() (in module algo)": [[0, "algo.compute_brier_score", false]], "compute_calibration_ece() (in module algo)": [[0, "algo.compute_calibration_ece", false]], "correct_option_idx (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.correct_option_idx", false]], "correct_option_idx (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.correct_option_idx", false]], "correct_option_idx (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.correct_option_idx", false]], "crowd_probs (src.pm_rank.data.base.forecastproblem property)": [[6, "src.pm_rank.data.base.ForecastProblem.crowd_probs", false]], "crowd_probs (src.pm_rank.data.forecastproblem property)": [[7, "src.pm_rank.data.ForecastProblem.crowd_probs", false]], "crowd_probs (src.pm_rank.forecastproblem property)": [[10, "src.pm_rank.ForecastProblem.crowd_probs", false]], "data": [[2, "module-data", false]], "data (data.nightlyforecasts attribute)": [[2, "data.NightlyForecasts.data", false]], "default() (src.pm_rank.model.average_return.averagereturnconfig class method)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.default", false]], "default() (src.pm_rank.model.averagereturnconfig class method)": [[14, "src.pm_rank.model.AverageReturnConfig.default", false]], "default_bootstrap_ci_config (in module src.pm_rank.model.utils)": [[17, "src.pm_rank.model.utils.DEFAULT_BOOTSTRAP_CI_CONFIG", false]], "default_bootstrap_config (in module algo)": [[0, "algo.DEFAULT_BOOTSTRAP_CONFIG", false]], "device (src.pm_rank.model.irt.mcmcconfig attribute)": [[15, "src.pm_rank.model.irt.MCMCConfig.device", false]], "device (src.pm_rank.model.irt.sviconfig attribute)": [[15, "src.pm_rank.model.irt.SVIConfig.device", false]], "discretized_scores (src.pm_rank.model.irt.irtobs attribute)": [[15, "src.pm_rank.model.irt.IRTObs.discretized_scores", false]], "end_time (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.end_time", false]], "end_time (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.end_time", false]], "end_time (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.end_time", false]], "exponential_weighting() (in module data)": [[2, "data.exponential_weighting", false]], "first_n_weighting() (in module data)": [[2, "data.first_n_weighting", false]], "fit() (src.pm_rank.averagereturn method)": [[10, "src.pm_rank.AverageReturn.fit", false]], "fit() (src.pm_rank.calibrationmetric method)": [[10, "src.pm_rank.CalibrationMetric.fit", false]], "fit() (src.pm_rank.generalizedbt method)": [[10, "src.pm_rank.GeneralizedBT.fit", false]], "fit() (src.pm_rank.model.average_return.averagereturn method)": [[11, "src.pm_rank.model.average_return.AverageReturn.fit", false]], "fit() (src.pm_rank.model.averagereturn method)": [[14, "src.pm_rank.model.AverageReturn.fit", false]], "fit() (src.pm_rank.model.bradley_terry.generalizedbt method)": [[12, "src.pm_rank.model.bradley_terry.GeneralizedBT.fit", false]], "fit() (src.pm_rank.model.calibration.calibrationmetric method)": [[13, "src.pm_rank.model.calibration.CalibrationMetric.fit", false]], "fit() (src.pm_rank.model.calibrationmetric method)": [[14, "src.pm_rank.model.CalibrationMetric.fit", false]], "fit() (src.pm_rank.model.generalizedbt method)": [[14, "src.pm_rank.model.GeneralizedBT.fit", false]], "fit() (src.pm_rank.model.irt.irtmodel method)": [[15, "src.pm_rank.model.irt.IRTModel.fit", false]], "fit() (src.pm_rank.model.scoring_rule.scoringrule method)": [[16, "src.pm_rank.model.scoring_rule.ScoringRule.fit", false]], "fit_by_category() (src.pm_rank.averagereturn method)": [[10, "src.pm_rank.AverageReturn.fit_by_category", false]], "fit_by_category() (src.pm_rank.model.average_return.averagereturn method)": [[11, "src.pm_rank.model.average_return.AverageReturn.fit_by_category", false]], "fit_by_category() (src.pm_rank.model.averagereturn method)": [[14, "src.pm_rank.model.AverageReturn.fit_by_category", false]], "fit_by_category() (src.pm_rank.model.scoring_rule.scoringrule method)": [[16, "src.pm_rank.model.scoring_rule.ScoringRule.fit_by_category", false]], "fit_stream() (src.pm_rank.averagereturn method)": [[10, "src.pm_rank.AverageReturn.fit_stream", false]], "fit_stream() (src.pm_rank.model.average_return.averagereturn method)": [[11, "src.pm_rank.model.average_return.AverageReturn.fit_stream", false]], "fit_stream() (src.pm_rank.model.averagereturn method)": [[14, "src.pm_rank.model.AverageReturn.fit_stream", false]], "fit_stream() (src.pm_rank.model.scoring_rule.scoringrule method)": [[16, "src.pm_rank.model.scoring_rule.ScoringRule.fit_stream", false]], "fit_stream_with_timestamp() (src.pm_rank.averagereturn method)": [[10, "src.pm_rank.AverageReturn.fit_stream_with_timestamp", false]], "fit_stream_with_timestamp() (src.pm_rank.model.average_return.averagereturn method)": [[11, "src.pm_rank.model.average_return.AverageReturn.fit_stream_with_timestamp", false]], "fit_stream_with_timestamp() (src.pm_rank.model.averagereturn method)": [[14, "src.pm_rank.model.AverageReturn.fit_stream_with_timestamp", false]], "fit_stream_with_timestamp() (src.pm_rank.model.scoring_rule.scoringrule method)": [[16, "src.pm_rank.model.scoring_rule.ScoringRule.fit_stream_with_timestamp", false]], "forecast_id (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.forecast_id", false]], "forecast_id (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.forecast_id", false]], "forecast_id (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.forecast_id", false]], "forecast_problems (src.pm_rank.data.base.forecastchallenge attribute)": [[6, "src.pm_rank.data.base.ForecastChallenge.forecast_problems", false]], "forecast_problems (src.pm_rank.data.forecastchallenge attribute)": [[7, "src.pm_rank.data.ForecastChallenge.forecast_problems", false]], "forecast_problems (src.pm_rank.forecastchallenge attribute)": [[10, "src.pm_rank.ForecastChallenge.forecast_problems", false]], "forecastchallenge (class in src.pm_rank)": [[10, "src.pm_rank.ForecastChallenge", false]], "forecastchallenge (class in src.pm_rank.data)": [[7, "src.pm_rank.data.ForecastChallenge", false]], "forecastchallenge (class in src.pm_rank.data.base)": [[6, "src.pm_rank.data.base.ForecastChallenge", false]], "forecaster_data_to_rankings() (in module src.pm_rank.model.utils)": [[17, "src.pm_rank.model.utils.forecaster_data_to_rankings", false]], "forecaster_id_to_idx (src.pm_rank.model.irt.irtobs attribute)": [[15, "src.pm_rank.model.irt.IRTObs.forecaster_id_to_idx", false]], "forecaster_ids (src.pm_rank.model.irt.irtobs attribute)": [[15, "src.pm_rank.model.irt.IRTObs.forecaster_ids", false]], "forecaster_idx_to_id (src.pm_rank.model.irt.irtobs property)": [[15, "src.pm_rank.model.irt.IRTObs.forecaster_idx_to_id", false]], "forecaster_map (src.pm_rank.data.base.forecastchallenge property)": [[6, "src.pm_rank.data.base.ForecastChallenge.forecaster_map", false]], "forecaster_map (src.pm_rank.data.forecastchallenge property)": [[7, "src.pm_rank.data.ForecastChallenge.forecaster_map", false]], "forecaster_map (src.pm_rank.forecastchallenge property)": [[10, "src.pm_rank.ForecastChallenge.forecaster_map", false]], "forecastevent (class in src.pm_rank)": [[10, "src.pm_rank.ForecastEvent", false]], "forecastevent (class in src.pm_rank.data)": [[7, "src.pm_rank.data.ForecastEvent", false]], "forecastevent (class in src.pm_rank.data.base)": [[6, "src.pm_rank.data.base.ForecastEvent", false]], "forecastproblem (class in src.pm_rank)": [[10, "src.pm_rank.ForecastProblem", false]], "forecastproblem (class in src.pm_rank.data)": [[7, "src.pm_rank.data.ForecastProblem", false]], "forecastproblem (class in src.pm_rank.data.base)": [[6, "src.pm_rank.data.base.ForecastProblem", false]], "forecasts (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.forecasts", false]], "forecasts (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.forecasts", false]], "forecasts (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.forecasts", false]], "from_prophet_arena_csv() (data.nightlyforecasts class method)": [[2, "data.NightlyForecasts.from_prophet_arena_csv", false]], "generalizedbt (class in src.pm_rank)": [[10, "src.pm_rank.GeneralizedBT", false]], "generalizedbt (class in src.pm_rank.model)": [[14, "src.pm_rank.model.GeneralizedBT", false]], "generalizedbt (class in src.pm_rank.model.bradley_terry)": [[12, "src.pm_rank.model.bradley_terry.GeneralizedBT", false]], "get() (src.pm_rank.model.average_return.averagereturnconfig method)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.get", false]], "get() (src.pm_rank.model.averagereturnconfig method)": [[14, "src.pm_rank.model.AverageReturnConfig.get", false]], "get_challenge_metadata() (src.pm_rank.challengeloader method)": [[10, "src.pm_rank.ChallengeLoader.get_challenge_metadata", false]], "get_challenge_metadata() (src.pm_rank.data.base.challengeloader method)": [[6, "src.pm_rank.data.base.ChallengeLoader.get_challenge_metadata", false]], "get_challenge_metadata() (src.pm_rank.data.challengeloader method)": [[7, "src.pm_rank.data.ChallengeLoader.get_challenge_metadata", false]], "get_challenge_metadata() (src.pm_rank.data.gjochallengeloader method)": [[7, "src.pm_rank.data.GJOChallengeLoader.get_challenge_metadata", false]], "get_challenge_metadata() (src.pm_rank.data.loaders.gjochallengeloader method)": [[8, "src.pm_rank.data.loaders.GJOChallengeLoader.get_challenge_metadata", false]], "get_challenge_metadata() (src.pm_rank.data.loaders.prophetarenachallengeloader method)": [[8, "src.pm_rank.data.loaders.ProphetArenaChallengeLoader.get_challenge_metadata", false]], "get_challenge_metadata() (src.pm_rank.gjochallengeloader method)": [[10, "src.pm_rank.GJOChallengeLoader.get_challenge_metadata", false]], "get_challenge_metadata() (src.pm_rank.prophetarenachallengeloader method)": [[10, "src.pm_rank.ProphetArenaChallengeLoader.get_challenge_metadata", false]], "get_forecaster_problems() (src.pm_rank.data.base.forecastchallenge method)": [[6, "src.pm_rank.data.base.ForecastChallenge.get_forecaster_problems", false]], "get_forecaster_problems() (src.pm_rank.data.forecastchallenge method)": [[7, "src.pm_rank.data.ForecastChallenge.get_forecaster_problems", false]], "get_forecaster_problems() (src.pm_rank.forecastchallenge method)": [[10, "src.pm_rank.ForecastChallenge.get_forecaster_problems", false]], "get_logger() (in module src.pm_rank.data.utils)": [[9, "src.pm_rank.data.utils.get_logger", false]], "get_logger() (in module src.pm_rank.model.utils)": [[17, "src.pm_rank.model.utils.get_logger", false]], "get_problem_by_id() (src.pm_rank.data.base.forecastchallenge method)": [[6, "src.pm_rank.data.base.ForecastChallenge.get_problem_by_id", false]], "get_problem_by_id() (src.pm_rank.data.forecastchallenge method)": [[7, "src.pm_rank.data.ForecastChallenge.get_problem_by_id", false]], "get_problem_by_id() (src.pm_rank.forecastchallenge method)": [[10, "src.pm_rank.ForecastChallenge.get_problem_by_id", false]], "get_problem_level_parameters() (src.pm_rank.model.irt.irtmodel method)": [[15, "src.pm_rank.model.irt.IRTModel.get_problem_level_parameters", false]], "get_problems() (src.pm_rank.data.base.forecastchallenge method)": [[6, "src.pm_rank.data.base.ForecastChallenge.get_problems", false]], "get_problems() (src.pm_rank.data.forecastchallenge method)": [[7, "src.pm_rank.data.ForecastChallenge.get_problems", false]], "get_problems() (src.pm_rank.forecastchallenge method)": [[10, "src.pm_rank.ForecastChallenge.get_problems", false]], "gjochallengeloader (class in src.pm_rank)": [[10, "src.pm_rank.GJOChallengeLoader", false]], "gjochallengeloader (class in src.pm_rank.data)": [[7, "src.pm_rank.data.GJOChallengeLoader", false]], "gjochallengeloader (class in src.pm_rank.data.loaders)": [[8, "src.pm_rank.data.loaders.GJOChallengeLoader", false]], "has_no_odds (src.pm_rank.data.base.forecastproblem property)": [[6, "src.pm_rank.data.base.ForecastProblem.has_no_odds", false]], "has_no_odds (src.pm_rank.data.forecastproblem property)": [[7, "src.pm_rank.data.ForecastProblem.has_no_odds", false]], "has_no_odds (src.pm_rank.forecastproblem property)": [[10, "src.pm_rank.ForecastProblem.has_no_odds", false]], "has_odds (src.pm_rank.data.base.forecastproblem property)": [[6, "src.pm_rank.data.base.ForecastProblem.has_odds", false]], "has_odds (src.pm_rank.data.forecastproblem property)": [[7, "src.pm_rank.data.ForecastProblem.has_odds", false]], "has_odds (src.pm_rank.forecastproblem property)": [[10, "src.pm_rank.ForecastProblem.has_odds", false]], "irt_obs (src.pm_rank.model.irt.irtmodel attribute)": [[15, "src.pm_rank.model.irt.IRTModel.irt_obs", false]], "irtmodel (class in src.pm_rank.model.irt)": [[15, "src.pm_rank.model.irt.IRTModel", false]], "irtobs (class in src.pm_rank.model.irt)": [[15, "src.pm_rank.model.irt.IRTObs", false]], "items() (src.pm_rank.model.average_return.averagereturnconfig method)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.items", false]], "items() (src.pm_rank.model.averagereturnconfig method)": [[14, "src.pm_rank.model.AverageReturnConfig.items", false]], "kendall_correlation() (in module src.pm_rank)": [[10, "src.pm_rank.kendall_correlation", false]], "kendall_correlation() (in module src.pm_rank.model)": [[14, "src.pm_rank.model.kendall_correlation", false]], "kendall_correlation() (in module src.pm_rank.model.utils)": [[17, "src.pm_rank.model.utils.kendall_correlation", false]], "keys() (src.pm_rank.model.average_return.averagereturnconfig method)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.keys", false]], "keys() (src.pm_rank.model.averagereturnconfig method)": [[14, "src.pm_rank.model.AverageReturnConfig.keys", false]], "last_n_weighting() (in module data)": [[2, "data.last_n_weighting", false]], "learning_rate (src.pm_rank.model.irt.sviconfig attribute)": [[15, "src.pm_rank.model.irt.SVIConfig.learning_rate", false]], "load_challenge() (src.pm_rank.challengeloader method)": [[10, "src.pm_rank.ChallengeLoader.load_challenge", false]], "load_challenge() (src.pm_rank.data.base.challengeloader method)": [[6, "src.pm_rank.data.base.ChallengeLoader.load_challenge", false]], "load_challenge() (src.pm_rank.data.challengeloader method)": [[7, "src.pm_rank.data.ChallengeLoader.load_challenge", false]], "load_challenge() (src.pm_rank.data.gjochallengeloader method)": [[7, "src.pm_rank.data.GJOChallengeLoader.load_challenge", false]], "load_challenge() (src.pm_rank.data.loaders.gjochallengeloader method)": [[8, "src.pm_rank.data.loaders.GJOChallengeLoader.load_challenge", false]], "load_challenge() (src.pm_rank.data.loaders.prophetarenachallengeloader method)": [[8, "src.pm_rank.data.loaders.ProphetArenaChallengeLoader.load_challenge", false]], "load_challenge() (src.pm_rank.gjochallengeloader method)": [[10, "src.pm_rank.GJOChallengeLoader.load_challenge", false]], "load_challenge() (src.pm_rank.prophetarenachallengeloader method)": [[10, "src.pm_rank.ProphetArenaChallengeLoader.load_challenge", false]], "log_ranking_table() (in module src.pm_rank.model.utils)": [[17, "src.pm_rank.model.utils.log_ranking_table", false]], "logger (in module data)": [[2, "data.logger", false]], "logger (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.logger", false]], "logger (src.pm_rank.calibrationmetric attribute)": [[10, "src.pm_rank.CalibrationMetric.logger", false]], "logger (src.pm_rank.data.gjochallengeloader attribute)": [[7, "src.pm_rank.data.GJOChallengeLoader.logger", false]], "logger (src.pm_rank.data.loaders.gjochallengeloader attribute)": [[8, "src.pm_rank.data.loaders.GJOChallengeLoader.logger", false]], "logger (src.pm_rank.data.loaders.prophetarenachallengeloader attribute)": [[8, "src.pm_rank.data.loaders.ProphetArenaChallengeLoader.logger", false]], "logger (src.pm_rank.generalizedbt attribute)": [[10, "src.pm_rank.GeneralizedBT.logger", false]], "logger (src.pm_rank.gjochallengeloader attribute)": [[10, "src.pm_rank.GJOChallengeLoader.logger", false]], "logger (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.logger", false]], "logger (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.logger", false]], "logger (src.pm_rank.model.bradley_terry.generalizedbt attribute)": [[12, "src.pm_rank.model.bradley_terry.GeneralizedBT.logger", false]], "logger (src.pm_rank.model.calibration.calibrationmetric attribute)": [[13, "src.pm_rank.model.calibration.CalibrationMetric.logger", false]], "logger (src.pm_rank.model.calibrationmetric attribute)": [[14, "src.pm_rank.model.CalibrationMetric.logger", false]], "logger (src.pm_rank.model.generalizedbt attribute)": [[14, "src.pm_rank.model.GeneralizedBT.logger", false]], "logger (src.pm_rank.model.irt.irtmodel attribute)": [[15, "src.pm_rank.model.irt.IRTModel.logger", false]], "logger (src.pm_rank.model.scoring_rule.scoringrule attribute)": [[16, "src.pm_rank.model.scoring_rule.ScoringRule.logger", false]], "logger (src.pm_rank.prophetarenachallengeloader attribute)": [[10, "src.pm_rank.ProphetArenaChallengeLoader.logger", false]], "logscoringrule (class in src.pm_rank)": [[10, "src.pm_rank.LogScoringRule", false]], "logscoringrule (class in src.pm_rank.model)": [[14, "src.pm_rank.model.LogScoringRule", false]], "logscoringrule (class in src.pm_rank.model.scoring_rule)": [[16, "src.pm_rank.model.scoring_rule.LogScoringRule", false]], "max_problem_weight_quantile (in module src.pm_rank.model.scoring_rule)": [[16, "src.pm_rank.model.scoring_rule.MAX_PROBLEM_WEIGHT_QUANTILE", false]], "mcmcconfig (class in src.pm_rank.model.irt)": [[15, "src.pm_rank.model.irt.MCMCConfig", false]], "method (src.pm_rank.generalizedbt attribute)": [[10, "src.pm_rank.GeneralizedBT.method", false]], "method (src.pm_rank.model.bradley_terry.generalizedbt attribute)": [[12, "src.pm_rank.model.bradley_terry.GeneralizedBT.method", false]], "method (src.pm_rank.model.generalizedbt attribute)": [[14, "src.pm_rank.model.GeneralizedBT.method", false]], "method (src.pm_rank.model.irt.irtmodel attribute)": [[15, "src.pm_rank.model.irt.IRTModel.method", false]], "min_problem_weight_quantile (in module src.pm_rank.model.scoring_rule)": [[16, "src.pm_rank.model.scoring_rule.MIN_PROBLEM_WEIGHT_QUANTILE", false]], "model_rename_dict (in module plot)": [[4, "plot.model_rename_dict", false]], "model_rename_dict (in module plot_timestamp)": [[5, "plot_timestamp.model_rename_dict", false]], "module": [[0, "module-algo", false], [1, "module-bootstrap", false], [2, "module-data", false], [4, "module-plot", false], [5, "module-plot_timestamp", false], [6, "module-src.pm_rank.data.base", false], [7, "module-src.pm_rank.data", false], [8, "module-src.pm_rank.data.loaders", false], [9, "module-src.pm_rank.data.utils", false], [10, "module-src.pm_rank", false], [11, "module-src.pm_rank.model.average_return", false], [12, "module-src.pm_rank.model.bradley_terry", false], [13, "module-src.pm_rank.model.calibration", false], [14, "module-src.pm_rank.model", false], [15, "module-src.pm_rank.model.irt", false], [16, "module-src.pm_rank.model.scoring_rule", false], [17, "module-src.pm_rank.model.utils", false], [18, "module-test_algo", false], [19, "module-test_bootstrap", false], [20, "module-test_calibration", false], [21, "module-utils", false]], "n_bins (src.pm_rank.model.irt.irtmodel attribute)": [[15, "src.pm_rank.model.irt.IRTModel.n_bins", false]], "negate (src.pm_rank.brierscoringrule attribute)": [[10, "src.pm_rank.BrierScoringRule.negate", false]], "negate (src.pm_rank.model.brierscoringrule attribute)": [[14, "src.pm_rank.model.BrierScoringRule.negate", false]], "negate (src.pm_rank.model.scoring_rule.brierscoringrule attribute)": [[16, "src.pm_rank.model.scoring_rule.BrierScoringRule.negate", false]], "nightlyforecasts (class in data)": [[2, "data.NightlyForecasts", false]], "no_odds (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.no_odds", false]], "no_odds (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.no_odds", false]], "no_odds (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.no_odds", false]], "num_bins (src.pm_rank.calibrationmetric attribute)": [[10, "src.pm_rank.CalibrationMetric.num_bins", false]], "num_bins (src.pm_rank.model.calibration.calibrationmetric attribute)": [[13, "src.pm_rank.model.calibration.CalibrationMetric.num_bins", false]], "num_bins (src.pm_rank.model.calibrationmetric attribute)": [[14, "src.pm_rank.model.CalibrationMetric.num_bins", false]], "num_bootstrap_samples (src.pm_rank.model.utils.bootstrapciconfig attribute)": [[17, "src.pm_rank.model.utils.BootstrapCIConfig.num_bootstrap_samples", false]], "num_forecasters (src.pm_rank.data.base.forecastchallenge property)": [[6, "src.pm_rank.data.base.ForecastChallenge.num_forecasters", false]], "num_forecasters (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.num_forecasters", false]], "num_forecasters (src.pm_rank.data.forecastchallenge property)": [[7, "src.pm_rank.data.ForecastChallenge.num_forecasters", false]], "num_forecasters (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.num_forecasters", false]], "num_forecasters (src.pm_rank.forecastchallenge property)": [[10, "src.pm_rank.ForecastChallenge.num_forecasters", false]], "num_forecasters (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.num_forecasters", false]], "num_iter (src.pm_rank.generalizedbt attribute)": [[10, "src.pm_rank.GeneralizedBT.num_iter", false]], "num_iter (src.pm_rank.model.bradley_terry.generalizedbt attribute)": [[12, "src.pm_rank.model.bradley_terry.GeneralizedBT.num_iter", false]], "num_iter (src.pm_rank.model.generalizedbt attribute)": [[14, "src.pm_rank.model.GeneralizedBT.num_iter", false]], "num_money_per_round (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.num_money_per_round", false]], "num_money_per_round (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.num_money_per_round", false]], "num_money_per_round (src.pm_rank.model.average_return.averagereturnconfig attribute)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.num_money_per_round", false]], "num_money_per_round (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.num_money_per_round", false]], "num_money_per_round (src.pm_rank.model.averagereturnconfig attribute)": [[14, "src.pm_rank.model.AverageReturnConfig.num_money_per_round", false]], "num_steps (src.pm_rank.model.irt.sviconfig attribute)": [[15, "src.pm_rank.model.irt.SVIConfig.num_steps", false]], "num_workers (src.pm_rank.model.irt.mcmcconfig attribute)": [[15, "src.pm_rank.model.irt.MCMCConfig.num_workers", false]], "odds (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.odds", false]], "odds (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.odds", false]], "odds (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.odds", false]], "optimizer (src.pm_rank.model.irt.sviconfig attribute)": [[15, "src.pm_rank.model.irt.SVIConfig.optimizer", false]], "options (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.options", false]], "options (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.options", false]], "options (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.options", false]], "parse_json_or_eval() (in module src.pm_rank.data.utils)": [[9, "src.pm_rank.data.utils.parse_json_or_eval", false]], "plot": [[4, "module-plot", false]], "plot() (src.pm_rank.calibrationmetric method)": [[10, "src.pm_rank.CalibrationMetric.plot", false]], "plot() (src.pm_rank.model.calibration.calibrationmetric method)": [[13, "src.pm_rank.model.calibration.CalibrationMetric.plot", false]], "plot() (src.pm_rank.model.calibrationmetric method)": [[14, "src.pm_rank.model.CalibrationMetric.plot", false]], "plot_score_over_round() (in module plot)": [[4, "plot.plot_score_over_round", false]], "plot_score_over_time_bins() (in module plot_timestamp)": [[5, "plot_timestamp.plot_score_over_time_bins", false]], "plot_time_gap_distribution() (in module plot_timestamp)": [[5, "plot_timestamp.plot_time_gap_distribution", false]], "plot_time_gap_histogram() (in module plot_timestamp)": [[5, "plot_timestamp.plot_time_gap_histogram", false]], "plot_timestamp": [[5, "module-plot_timestamp", false]], "prediction_cols (data.nightlyforecasts attribute)": [[2, "data.NightlyForecasts.PREDICTION_COLS", false]], "predictions_csv (in module algo)": [[0, "algo.predictions_csv", false]], "predictions_csv (in module plot)": [[4, "plot.predictions_csv", false]], "predictions_csv (in module plot_timestamp)": [[5, "plot_timestamp.predictions_csv", false]], "predictions_csv (in module test_algo)": [[18, "test_algo.predictions_csv", false]], "problem_id (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.problem_id", false]], "problem_id (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.problem_id", false]], "problem_id (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.problem_id", false]], "problem_id (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.problem_id", false]], "problem_id (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.problem_id", false]], "problem_id (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.problem_id", false]], "problem_id_to_idx (src.pm_rank.model.irt.irtobs attribute)": [[15, "src.pm_rank.model.irt.IRTObs.problem_id_to_idx", false]], "problem_ids (src.pm_rank.model.irt.irtobs attribute)": [[15, "src.pm_rank.model.irt.IRTObs.problem_ids", false]], "problem_idx_to_id (src.pm_rank.model.irt.irtobs property)": [[15, "src.pm_rank.model.irt.IRTObs.problem_idx_to_id", false]], "probs (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.probs", false]], "probs (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.probs", false]], "probs (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.probs", false]], "process_problem_fn (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.process_problem_fn", false]], "process_problem_fn (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.process_problem_fn", false]], "process_problem_fn (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.process_problem_fn", false]], "prophetarenachallengeloader (class in src.pm_rank)": [[10, "src.pm_rank.ProphetArenaChallengeLoader", false]], "prophetarenachallengeloader (class in src.pm_rank.data.loaders)": [[8, "src.pm_rank.data.loaders.ProphetArenaChallengeLoader", false]], "prophetarenaforecastevent (class in src.pm_rank.data.base)": [[6, "src.pm_rank.data.base.ProphetArenaForecastEvent", false]], "random_seed (src.pm_rank.model.utils.bootstrapciconfig attribute)": [[17, "src.pm_rank.model.utils.BootstrapCIConfig.random_seed", false]], "rank_forecasters_by_score() (in module algo)": [[0, "algo.rank_forecasters_by_score", false]], "renames (data.nightlyforecasts attribute)": [[2, "data.NightlyForecasts.RENAMES", false]], "risk_aversion (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.risk_aversion", false]], "risk_aversion (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.risk_aversion", false]], "risk_aversion (src.pm_rank.model.average_return.averagereturnconfig attribute)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.risk_aversion", false]], "risk_aversion (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.risk_aversion", false]], "risk_aversion (src.pm_rank.model.averagereturnconfig attribute)": [[14, "src.pm_rank.model.AverageReturnConfig.risk_aversion", false]], "save_result (src.pm_rank.model.irt.mcmcconfig attribute)": [[15, "src.pm_rank.model.irt.MCMCConfig.save_result", false]], "scores (src.pm_rank.model.irt.irtobs attribute)": [[15, "src.pm_rank.model.irt.IRTObs.scores", false]], "scoringrule (class in src.pm_rank.model.scoring_rule)": [[16, "src.pm_rank.model.scoring_rule.ScoringRule", false]], "set_unnormalized_probs_default() (src.pm_rank.data.base.forecastevent method)": [[6, "src.pm_rank.data.base.ForecastEvent.set_unnormalized_probs_default", false]], "set_unnormalized_probs_default() (src.pm_rank.data.forecastevent method)": [[7, "src.pm_rank.data.ForecastEvent.set_unnormalized_probs_default", false]], "set_unnormalized_probs_default() (src.pm_rank.forecastevent method)": [[10, "src.pm_rank.ForecastEvent.set_unnormalized_probs_default", false]], "simplify_market_outcome() (data.nightlyforecasts static method)": [[2, "data.NightlyForecasts.simplify_market_outcome", false]], "simplify_prediction() (data.nightlyforecasts static method)": [[2, "data.NightlyForecasts.simplify_prediction", false]], "smooth_odds() (src.pm_rank.data.base.forecastevent method)": [[6, "src.pm_rank.data.base.ForecastEvent.smooth_odds", false]], "smooth_odds() (src.pm_rank.data.forecastevent method)": [[7, "src.pm_rank.data.ForecastEvent.smooth_odds", false]], "smooth_odds() (src.pm_rank.forecastevent method)": [[10, "src.pm_rank.ForecastEvent.smooth_odds", false]], "smooth_odds_eps (in module src.pm_rank.data.base)": [[6, "src.pm_rank.data.base.SMOOTH_ODDS_EPS", false]], "spearman_correlation() (in module src.pm_rank)": [[10, "src.pm_rank.spearman_correlation", false]], "spearman_correlation() (in module src.pm_rank.model)": [[14, "src.pm_rank.model.spearman_correlation", false]], "spearman_correlation() (in module src.pm_rank.model.utils)": [[17, "src.pm_rank.model.utils.spearman_correlation", false]], "sphericalscoringrule (class in src.pm_rank)": [[10, "src.pm_rank.SphericalScoringRule", false]], "sphericalscoringrule (class in src.pm_rank.model)": [[14, "src.pm_rank.model.SphericalScoringRule", false]], "sphericalscoringrule (class in src.pm_rank.model.scoring_rule)": [[16, "src.pm_rank.model.scoring_rule.SphericalScoringRule", false]], "src.pm_rank": [[10, "module-src.pm_rank", false]], "src.pm_rank.data": [[7, "module-src.pm_rank.data", false]], "src.pm_rank.data.base": [[6, "module-src.pm_rank.data.base", false]], "src.pm_rank.data.loaders": [[8, "module-src.pm_rank.data.loaders", false]], "src.pm_rank.data.utils": [[9, "module-src.pm_rank.data.utils", false]], "src.pm_rank.model": [[14, "module-src.pm_rank.model", false]], "src.pm_rank.model.average_return": [[11, "module-src.pm_rank.model.average_return", false]], "src.pm_rank.model.bradley_terry": [[12, "module-src.pm_rank.model.bradley_terry", false]], "src.pm_rank.model.calibration": [[13, "module-src.pm_rank.model.calibration", false]], "src.pm_rank.model.irt": [[15, "module-src.pm_rank.model.irt", false]], "src.pm_rank.model.scoring_rule": [[16, "module-src.pm_rank.model.scoring_rule", false]], "src.pm_rank.model.utils": [[17, "module-src.pm_rank.model.utils", false]], "strategy (src.pm_rank.calibrationmetric attribute)": [[10, "src.pm_rank.CalibrationMetric.strategy", false]], "strategy (src.pm_rank.model.calibration.calibrationmetric attribute)": [[13, "src.pm_rank.model.calibration.CalibrationMetric.strategy", false]], "strategy (src.pm_rank.model.calibrationmetric attribute)": [[14, "src.pm_rank.model.CalibrationMetric.strategy", false]], "stream_problems() (src.pm_rank.data.base.forecastchallenge method)": [[6, "src.pm_rank.data.base.ForecastChallenge.stream_problems", false]], "stream_problems() (src.pm_rank.data.forecastchallenge method)": [[7, "src.pm_rank.data.ForecastChallenge.stream_problems", false]], "stream_problems() (src.pm_rank.forecastchallenge method)": [[10, "src.pm_rank.ForecastChallenge.stream_problems", false]], "stream_problems_over_time() (src.pm_rank.data.base.forecastchallenge method)": [[6, "src.pm_rank.data.base.ForecastChallenge.stream_problems_over_time", false]], "stream_problems_over_time() (src.pm_rank.data.forecastchallenge method)": [[7, "src.pm_rank.data.ForecastChallenge.stream_problems_over_time", false]], "stream_problems_over_time() (src.pm_rank.forecastchallenge method)": [[10, "src.pm_rank.ForecastChallenge.stream_problems_over_time", false]], "submission_cols (data.nightlyforecasts attribute)": [[2, "data.NightlyForecasts.SUBMISSION_COLS", false]], "submission_id (src.pm_rank.data.base.prophetarenaforecastevent attribute)": [[6, "src.pm_rank.data.base.ProphetArenaForecastEvent.submission_id", false]], "sviconfig (class in src.pm_rank.model.irt)": [[15, "src.pm_rank.model.irt.SVIConfig", false]], "symmetric (src.pm_rank.model.utils.bootstrapciconfig attribute)": [[17, "src.pm_rank.model.utils.BootstrapCIConfig.symmetric", false]], "test_algo": [[18, "module-test_algo", false]], "test_bootstrap": [[19, "module-test_bootstrap", false]], "test_bootstrap_average_return() (in module test_bootstrap)": [[19, "test_bootstrap.test_bootstrap_average_return", false]], "test_bootstrap_simple() (in module test_bootstrap)": [[19, "test_bootstrap.test_bootstrap_simple", false]], "test_calibration": [[20, "module-test_calibration", false]], "test_perfect_calibration() (in module test_calibration)": [[20, "test_calibration.test_perfect_calibration", false]], "test_simple_calibration() (in module test_calibration)": [[20, "test_calibration.test_simple_calibration", false]], "test_simple_case() (in module test_algo)": [[18, "test_algo.test_simple_case", false]], "threshold (src.pm_rank.generalizedbt attribute)": [[10, "src.pm_rank.GeneralizedBT.threshold", false]], "threshold (src.pm_rank.model.bradley_terry.generalizedbt attribute)": [[12, "src.pm_rank.model.bradley_terry.GeneralizedBT.threshold", false]], "threshold (src.pm_rank.model.generalizedbt attribute)": [[14, "src.pm_rank.model.GeneralizedBT.threshold", false]], "time_bins (in module plot_timestamp)": [[5, "plot_timestamp.TIME_BINS", false]], "time_to_last_weighting() (in module data)": [[2, "data.time_to_last_weighting", false]], "timestamp (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.timestamp", false]], "timestamp (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.timestamp", false]], "timestamp (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.timestamp", false]], "title (src.pm_rank.data.base.forecastchallenge attribute)": [[6, "src.pm_rank.data.base.ForecastChallenge.title", false]], "title (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.title", false]], "title (src.pm_rank.data.forecastchallenge attribute)": [[7, "src.pm_rank.data.ForecastChallenge.title", false]], "title (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.title", false]], "title (src.pm_rank.forecastchallenge attribute)": [[10, "src.pm_rank.ForecastChallenge.title", false]], "title (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.title", false]], "total_samples (src.pm_rank.model.irt.mcmcconfig attribute)": [[15, "src.pm_rank.model.irt.MCMCConfig.total_samples", false]], "turn_market_data_to_odds() (data.nightlyforecasts static method)": [[2, "data.NightlyForecasts.turn_market_data_to_odds", false]], "uniform_weighting() (in module data)": [[2, "data.uniform_weighting", false]], "unique_forecasters (src.pm_rank.data.base.forecastchallenge property)": [[6, "src.pm_rank.data.base.ForecastChallenge.unique_forecasters", false]], "unique_forecasters (src.pm_rank.data.base.forecastproblem property)": [[6, "src.pm_rank.data.base.ForecastProblem.unique_forecasters", false]], "unique_forecasters (src.pm_rank.data.forecastchallenge property)": [[7, "src.pm_rank.data.ForecastChallenge.unique_forecasters", false]], "unique_forecasters (src.pm_rank.data.forecastproblem property)": [[7, "src.pm_rank.data.ForecastProblem.unique_forecasters", false]], "unique_forecasters (src.pm_rank.forecastchallenge property)": [[10, "src.pm_rank.ForecastChallenge.unique_forecasters", false]], "unique_forecasters (src.pm_rank.forecastproblem property)": [[10, "src.pm_rank.ForecastProblem.unique_forecasters", false]], "unnormalized_probs (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.unnormalized_probs", false]], "unnormalized_probs (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.unnormalized_probs", false]], "unnormalized_probs (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.unnormalized_probs", false]], "url (src.pm_rank.data.base.forecastproblem attribute)": [[6, "src.pm_rank.data.base.ForecastProblem.url", false]], "url (src.pm_rank.data.forecastproblem attribute)": [[7, "src.pm_rank.data.ForecastProblem.url", false]], "url (src.pm_rank.forecastproblem attribute)": [[10, "src.pm_rank.ForecastProblem.url", false]], "use_approximate (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.use_approximate", false]], "use_approximate (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.use_approximate", false]], "use_approximate (src.pm_rank.model.average_return.averagereturnconfig attribute)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.use_approximate", false]], "use_approximate (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.use_approximate", false]], "use_approximate (src.pm_rank.model.averagereturnconfig attribute)": [[14, "src.pm_rank.model.AverageReturnConfig.use_approximate", false]], "use_bid_for_odds (src.pm_rank.data.loaders.prophetarenachallengeloader attribute)": [[8, "src.pm_rank.data.loaders.ProphetArenaChallengeLoader.use_bid_for_odds", false]], "use_bid_for_odds (src.pm_rank.prophetarenachallengeloader attribute)": [[10, "src.pm_rank.ProphetArenaChallengeLoader.use_bid_for_odds", false]], "use_binary_reduction (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.use_binary_reduction", false]], "use_binary_reduction (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.use_binary_reduction", false]], "use_binary_reduction (src.pm_rank.model.average_return.averagereturnconfig attribute)": [[11, "src.pm_rank.model.average_return.AverageReturnConfig.use_binary_reduction", false]], "use_binary_reduction (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.use_binary_reduction", false]], "use_binary_reduction (src.pm_rank.model.averagereturnconfig attribute)": [[14, "src.pm_rank.model.AverageReturnConfig.use_binary_reduction", false]], "use_empirical_quantiles (src.pm_rank.model.irt.irtmodel attribute)": [[15, "src.pm_rank.model.irt.IRTModel.use_empirical_quantiles", false]], "use_open_time (src.pm_rank.data.loaders.prophetarenachallengeloader attribute)": [[8, "src.pm_rank.data.loaders.ProphetArenaChallengeLoader.use_open_time", false]], "use_open_time (src.pm_rank.prophetarenachallengeloader attribute)": [[10, "src.pm_rank.ProphetArenaChallengeLoader.use_open_time", false]], "username (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.username", false]], "username (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.username", false]], "username (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.username", false]], "utils": [[21, "module-utils", false]], "validate_categories() (src.pm_rank.data.base.forecastchallenge method)": [[6, "src.pm_rank.data.base.ForecastChallenge.validate_categories", false]], "validate_categories() (src.pm_rank.data.forecastchallenge method)": [[7, "src.pm_rank.data.ForecastChallenge.validate_categories", false]], "validate_categories() (src.pm_rank.forecastchallenge method)": [[10, "src.pm_rank.ForecastChallenge.validate_categories", false]], "validate_correct_option_idx() (src.pm_rank.data.base.forecastproblem method)": [[6, "src.pm_rank.data.base.ForecastProblem.validate_correct_option_idx", false]], "validate_correct_option_idx() (src.pm_rank.data.forecastproblem method)": [[7, "src.pm_rank.data.ForecastProblem.validate_correct_option_idx", false]], "validate_correct_option_idx() (src.pm_rank.forecastproblem method)": [[10, "src.pm_rank.ForecastProblem.validate_correct_option_idx", false]], "validate_forecasts() (src.pm_rank.data.base.forecastproblem method)": [[6, "src.pm_rank.data.base.ForecastProblem.validate_forecasts", false]], "validate_forecasts() (src.pm_rank.data.forecastproblem method)": [[7, "src.pm_rank.data.ForecastProblem.validate_forecasts", false]], "validate_forecasts() (src.pm_rank.forecastproblem method)": [[10, "src.pm_rank.ForecastProblem.validate_forecasts", false]], "validate_odds() (src.pm_rank.data.base.forecastevent method)": [[6, "src.pm_rank.data.base.ForecastEvent.validate_odds", false]], "validate_odds() (src.pm_rank.data.forecastevent method)": [[7, "src.pm_rank.data.ForecastEvent.validate_odds", false]], "validate_odds() (src.pm_rank.forecastevent method)": [[10, "src.pm_rank.ForecastEvent.validate_odds", false]], "validate_probabilities() (src.pm_rank.data.base.forecastevent method)": [[6, "src.pm_rank.data.base.ForecastEvent.validate_probabilities", false]], "validate_probabilities() (src.pm_rank.data.forecastevent method)": [[7, "src.pm_rank.data.ForecastEvent.validate_probabilities", false]], "validate_probabilities() (src.pm_rank.forecastevent method)": [[10, "src.pm_rank.ForecastEvent.validate_probabilities", false]], "validate_problems() (src.pm_rank.data.base.forecastchallenge method)": [[6, "src.pm_rank.data.base.ForecastChallenge.validate_problems", false]], "validate_problems() (src.pm_rank.data.forecastchallenge method)": [[7, "src.pm_rank.data.ForecastChallenge.validate_problems", false]], "validate_problems() (src.pm_rank.forecastchallenge method)": [[10, "src.pm_rank.ForecastChallenge.validate_problems", false]], "validate_unnormalized_probabilities() (src.pm_rank.data.base.forecastevent method)": [[6, "src.pm_rank.data.base.ForecastEvent.validate_unnormalized_probabilities", false]], "validate_unnormalized_probabilities() (src.pm_rank.data.forecastevent method)": [[7, "src.pm_rank.data.ForecastEvent.validate_unnormalized_probabilities", false]], "validate_unnormalized_probabilities() (src.pm_rank.forecastevent method)": [[10, "src.pm_rank.ForecastEvent.validate_unnormalized_probabilities", false]], "validate_weight() (src.pm_rank.data.base.forecastevent method)": [[6, "src.pm_rank.data.base.ForecastEvent.validate_weight", false]], "validate_weight() (src.pm_rank.data.forecastevent method)": [[7, "src.pm_rank.data.ForecastEvent.validate_weight", false]], "validate_weight() (src.pm_rank.forecastevent method)": [[10, "src.pm_rank.ForecastEvent.validate_weight", false]], "verbose (src.pm_rank.averagereturn attribute)": [[10, "src.pm_rank.AverageReturn.verbose", false]], "verbose (src.pm_rank.calibrationmetric attribute)": [[10, "src.pm_rank.CalibrationMetric.verbose", false]], "verbose (src.pm_rank.generalizedbt attribute)": [[10, "src.pm_rank.GeneralizedBT.verbose", false]], "verbose (src.pm_rank.model.average_return.averagereturn attribute)": [[11, "src.pm_rank.model.average_return.AverageReturn.verbose", false]], "verbose (src.pm_rank.model.averagereturn attribute)": [[14, "src.pm_rank.model.AverageReturn.verbose", false]], "verbose (src.pm_rank.model.bradley_terry.generalizedbt attribute)": [[12, "src.pm_rank.model.bradley_terry.GeneralizedBT.verbose", false]], "verbose (src.pm_rank.model.calibration.calibrationmetric attribute)": [[13, "src.pm_rank.model.calibration.CalibrationMetric.verbose", false]], "verbose (src.pm_rank.model.calibrationmetric attribute)": [[14, "src.pm_rank.model.CalibrationMetric.verbose", false]], "verbose (src.pm_rank.model.generalizedbt attribute)": [[14, "src.pm_rank.model.GeneralizedBT.verbose", false]], "verbose (src.pm_rank.model.irt.irtmodel attribute)": [[15, "src.pm_rank.model.irt.IRTModel.verbose", false]], "verbose (src.pm_rank.model.scoring_rule.scoringrule attribute)": [[16, "src.pm_rank.model.scoring_rule.ScoringRule.verbose", false]], "warmup_steps (src.pm_rank.model.irt.mcmcconfig attribute)": [[15, "src.pm_rank.model.irt.MCMCConfig.warmup_steps", false]], "weight (src.pm_rank.data.base.forecastevent attribute)": [[6, "src.pm_rank.data.base.ForecastEvent.weight", false]], "weight (src.pm_rank.data.forecastevent attribute)": [[7, "src.pm_rank.data.ForecastEvent.weight", false]], "weight (src.pm_rank.forecastevent attribute)": [[10, "src.pm_rank.ForecastEvent.weight", false]], "weight_event (src.pm_rank.calibrationmetric attribute)": [[10, "src.pm_rank.CalibrationMetric.weight_event", false]], "weight_event (src.pm_rank.model.calibration.calibrationmetric attribute)": [[13, "src.pm_rank.model.calibration.CalibrationMetric.weight_event", false]], "weight_event (src.pm_rank.model.calibrationmetric attribute)": [[14, "src.pm_rank.model.CalibrationMetric.weight_event", false]], "weightingstrategy (in module data)": [[2, "data.WeightingStrategy", false]]}, "objects": {"": [[0, 0, 0, "-", "algo"], [1, 0, 0, "-", "bootstrap"], [2, 0, 0, "-", "data"], [4, 0, 0, "-", "plot"], [5, 0, 0, "-", "plot_timestamp"], [18, 0, 0, "-", "test_algo"], [19, 0, 0, "-", "test_bootstrap"], [20, 0, 0, "-", "test_calibration"], [21, 0, 0, "-", "utils"]], "algo": [[0, 1, 1, "", "DEFAULT_BOOTSTRAP_CONFIG"], [0, 2, 1, "", "add_market_baseline_predictions"], [0, 2, 1, "", "compute_average_return_neutral"], [0, 2, 1, "", "compute_brier_score"], [0, 2, 1, "", "compute_calibration_ece"], [0, 1, 1, "", "predictions_csv"], [0, 2, 1, "", "rank_forecasters_by_score"]], "bootstrap": [[1, 2, 1, "", "compute_bootstrap_ci"]], "data": [[2, 3, 1, "", "NightlyForecasts"], [2, 1, 1, "", "WeightingStrategy"], [2, 2, 1, "", "exponential_weighting"], [2, 2, 1, "", "first_n_weighting"], [2, 2, 1, "", "last_n_weighting"], [2, 1, 1, "", "logger"], [2, 2, 1, "", "time_to_last_weighting"], [2, 2, 1, "", "uniform_weighting"]], "data.NightlyForecasts": [[2, 4, 1, "", "PREDICTION_COLS"], [2, 4, 1, "", "RENAMES"], [2, 4, 1, "", "SUBMISSION_COLS"], [2, 4, 1, "", "data"], [2, 5, 1, "", "from_prophet_arena_csv"], [2, 5, 1, "", "simplify_market_outcome"], [2, 5, 1, "", "simplify_prediction"], [2, 5, 1, "", "turn_market_data_to_odds"]], "plot": [[4, 1, 1, "", "model_rename_dict"], [4, 2, 1, "", "plot_score_over_round"], [4, 1, 1, "", "predictions_csv"]], "plot_timestamp": [[5, 1, 1, "", "TIME_BINS"], [5, 1, 1, "", "model_rename_dict"], [5, 2, 1, "", "plot_score_over_time_bins"], [5, 2, 1, "", "plot_time_gap_distribution"], [5, 2, 1, "", "plot_time_gap_histogram"], [5, 1, 1, "", "predictions_csv"]], "src": [[10, 0, 0, "-", "pm_rank"]], "src.pm_rank": [[10, 3, 1, "", "AverageReturn"], [10, 3, 1, "", "BrierScoringRule"], [10, 3, 1, "", "CalibrationMetric"], [10, 3, 1, "", "ChallengeLoader"], [10, 3, 1, "", "ForecastChallenge"], [10, 3, 1, "", "ForecastEvent"], [10, 3, 1, "", "ForecastProblem"], [10, 3, 1, "", "GJOChallengeLoader"], [10, 3, 1, "", "GeneralizedBT"], [10, 3, 1, "", "LogScoringRule"], [10, 3, 1, "", "ProphetArenaChallengeLoader"], [10, 3, 1, "", "SphericalScoringRule"], [7, 0, 0, "-", "data"], [10, 2, 1, "", "kendall_correlation"], [14, 0, 0, "-", "model"], [10, 2, 1, "", "spearman_correlation"]], "src.pm_rank.AverageReturn": [[10, 4, 1, "", "bootstrap_ci_config"], [10, 4, 1, "", "break_tie_by_uniform"], [10, 5, 1, "", "fit"], [10, 5, 1, "", "fit_by_category"], [10, 5, 1, "", "fit_stream"], [10, 5, 1, "", "fit_stream_with_timestamp"], [10, 4, 1, "", "logger"], [10, 4, 1, "", "num_money_per_round"], [10, 4, 1, "", "process_problem_fn"], [10, 4, 1, "", "risk_aversion"], [10, 4, 1, "", "use_approximate"], [10, 4, 1, "", "use_binary_reduction"], [10, 4, 1, "", "verbose"]], "src.pm_rank.BrierScoringRule": [[10, 4, 1, "", "negate"]], "src.pm_rank.CalibrationMetric": [[10, 5, 1, "", "fit"], [10, 4, 1, "", "logger"], [10, 4, 1, "", "num_bins"], [10, 5, 1, "", "plot"], [10, 4, 1, "", "strategy"], [10, 4, 1, "", "verbose"], [10, 4, 1, "", "weight_event"]], "src.pm_rank.ChallengeLoader": [[10, 5, 1, "", "get_challenge_metadata"], [10, 5, 1, "", "load_challenge"]], "src.pm_rank.ForecastChallenge": [[10, 4, 1, "", "categories"], [10, 4, 1, "", "forecast_problems"], [10, 6, 1, "", "forecaster_map"], [10, 5, 1, "", "get_forecaster_problems"], [10, 5, 1, "", "get_problem_by_id"], [10, 5, 1, "", "get_problems"], [10, 6, 1, "", "num_forecasters"], [10, 5, 1, "", "stream_problems"], [10, 5, 1, "", "stream_problems_over_time"], [10, 4, 1, "", "title"], [10, 6, 1, "", "unique_forecasters"], [10, 5, 1, "", "validate_categories"], [10, 5, 1, "", "validate_problems"]], "src.pm_rank.ForecastEvent": [[10, 4, 1, "", "forecast_id"], [10, 4, 1, "", "no_odds"], [10, 4, 1, "", "odds"], [10, 4, 1, "", "problem_id"], [10, 4, 1, "", "probs"], [10, 5, 1, "", "set_unnormalized_probs_default"], [10, 5, 1, "", "smooth_odds"], [10, 4, 1, "", "timestamp"], [10, 4, 1, "", "unnormalized_probs"], [10, 4, 1, "", "username"], [10, 5, 1, "", "validate_odds"], [10, 5, 1, "", "validate_probabilities"], [10, 5, 1, "", "validate_unnormalized_probabilities"], [10, 5, 1, "", "validate_weight"], [10, 4, 1, "", "weight"]], "src.pm_rank.ForecastProblem": [[10, 4, 1, "", "category"], [10, 4, 1, "", "correct_option_idx"], [10, 6, 1, "", "crowd_probs"], [10, 4, 1, "", "end_time"], [10, 4, 1, "", "forecasts"], [10, 6, 1, "", "has_no_odds"], [10, 6, 1, "", "has_odds"], [10, 4, 1, "", "num_forecasters"], [10, 4, 1, "", "options"], [10, 4, 1, "", "problem_id"], [10, 4, 1, "", "title"], [10, 6, 1, "", "unique_forecasters"], [10, 4, 1, "", "url"], [10, 5, 1, "", "validate_correct_option_idx"], [10, 5, 1, "", "validate_forecasts"]], "src.pm_rank.GJOChallengeLoader": [[10, 4, 1, "", "challenge_title"], [10, 5, 1, "", "get_challenge_metadata"], [10, 5, 1, "", "load_challenge"], [10, 4, 1, "", "logger"]], "src.pm_rank.GeneralizedBT": [[10, 5, 1, "", "fit"], [10, 4, 1, "", "logger"], [10, 4, 1, "", "method"], [10, 4, 1, "", "num_iter"], [10, 4, 1, "", "threshold"], [10, 4, 1, "", "verbose"]], "src.pm_rank.LogScoringRule": [[10, 4, 1, "", "clip_prob"]], "src.pm_rank.ProphetArenaChallengeLoader": [[10, 4, 1, "", "challenge_title"], [10, 5, 1, "", "get_challenge_metadata"], [10, 5, 1, "", "load_challenge"], [10, 4, 1, "", "logger"], [10, 4, 1, "", "use_bid_for_odds"], [10, 4, 1, "", "use_open_time"]], "src.pm_rank.data": [[7, 3, 1, "", "ChallengeLoader"], [7, 3, 1, "", "ForecastChallenge"], [7, 3, 1, "", "ForecastEvent"], [7, 3, 1, "", "ForecastProblem"], [7, 3, 1, "", "GJOChallengeLoader"], [6, 0, 0, "-", "base"], [8, 0, 0, "-", "loaders"], [9, 0, 0, "-", "utils"]], "src.pm_rank.data.ChallengeLoader": [[7, 5, 1, "", "get_challenge_metadata"], [7, 5, 1, "", "load_challenge"]], "src.pm_rank.data.ForecastChallenge": [[7, 4, 1, "", "categories"], [7, 4, 1, "", "forecast_problems"], [7, 6, 1, "", "forecaster_map"], [7, 5, 1, "", "get_forecaster_problems"], [7, 5, 1, "", "get_problem_by_id"], [7, 5, 1, "", "get_problems"], [7, 6, 1, "", "num_forecasters"], [7, 5, 1, "", "stream_problems"], [7, 5, 1, "", "stream_problems_over_time"], [7, 4, 1, "", "title"], [7, 6, 1, "", "unique_forecasters"], [7, 5, 1, "", "validate_categories"], [7, 5, 1, "", "validate_problems"]], "src.pm_rank.data.ForecastEvent": [[7, 4, 1, "", "forecast_id"], [7, 4, 1, "", "no_odds"], [7, 4, 1, "", "odds"], [7, 4, 1, "", "problem_id"], [7, 4, 1, "", "probs"], [7, 5, 1, "", "set_unnormalized_probs_default"], [7, 5, 1, "", "smooth_odds"], [7, 4, 1, "", "timestamp"], [7, 4, 1, "", "unnormalized_probs"], [7, 4, 1, "", "username"], [7, 5, 1, "", "validate_odds"], [7, 5, 1, "", "validate_probabilities"], [7, 5, 1, "", "validate_unnormalized_probabilities"], [7, 5, 1, "", "validate_weight"], [7, 4, 1, "", "weight"]], "src.pm_rank.data.ForecastProblem": [[7, 4, 1, "", "category"], [7, 4, 1, "", "correct_option_idx"], [7, 6, 1, "", "crowd_probs"], [7, 4, 1, "", "end_time"], [7, 4, 1, "", "forecasts"], [7, 6, 1, "", "has_no_odds"], [7, 6, 1, "", "has_odds"], [7, 4, 1, "", "num_forecasters"], [7, 4, 1, "", "options"], [7, 4, 1, "", "problem_id"], [7, 4, 1, "", "title"], [7, 6, 1, "", "unique_forecasters"], [7, 4, 1, "", "url"], [7, 5, 1, "", "validate_correct_option_idx"], [7, 5, 1, "", "validate_forecasts"]], "src.pm_rank.data.GJOChallengeLoader": [[7, 4, 1, "", "challenge_title"], [7, 5, 1, "", "get_challenge_metadata"], [7, 5, 1, "", "load_challenge"], [7, 4, 1, "", "logger"]], "src.pm_rank.data.base": [[6, 3, 1, "", "ChallengeLoader"], [6, 3, 1, "", "ForecastChallenge"], [6, 3, 1, "", "ForecastEvent"], [6, 3, 1, "", "ForecastProblem"], [6, 3, 1, "", "ProphetArenaForecastEvent"], [6, 1, 1, "", "SMOOTH_ODDS_EPS"]], "src.pm_rank.data.base.ChallengeLoader": [[6, 5, 1, "", "get_challenge_metadata"], [6, 5, 1, "", "load_challenge"]], "src.pm_rank.data.base.ForecastChallenge": [[6, 4, 1, "", "categories"], [6, 4, 1, "", "forecast_problems"], [6, 6, 1, "", "forecaster_map"], [6, 5, 1, "", "get_forecaster_problems"], [6, 5, 1, "", "get_problem_by_id"], [6, 5, 1, "", "get_problems"], [6, 6, 1, "", "num_forecasters"], [6, 5, 1, "", "stream_problems"], [6, 5, 1, "", "stream_problems_over_time"], [6, 4, 1, "", "title"], [6, 6, 1, "", "unique_forecasters"], [6, 5, 1, "", "validate_categories"], [6, 5, 1, "", "validate_problems"]], "src.pm_rank.data.base.ForecastEvent": [[6, 4, 1, "", "forecast_id"], [6, 4, 1, "", "no_odds"], [6, 4, 1, "", "odds"], [6, 4, 1, "", "problem_id"], [6, 4, 1, "", "probs"], [6, 5, 1, "", "set_unnormalized_probs_default"], [6, 5, 1, "", "smooth_odds"], [6, 4, 1, "", "timestamp"], [6, 4, 1, "", "unnormalized_probs"], [6, 4, 1, "", "username"], [6, 5, 1, "", "validate_odds"], [6, 5, 1, "", "validate_probabilities"], [6, 5, 1, "", "validate_unnormalized_probabilities"], [6, 5, 1, "", "validate_weight"], [6, 4, 1, "", "weight"]], "src.pm_rank.data.base.ForecastProblem": [[6, 4, 1, "", "category"], [6, 4, 1, "", "correct_option_idx"], [6, 6, 1, "", "crowd_probs"], [6, 4, 1, "", "end_time"], [6, 4, 1, "", "forecasts"], [6, 6, 1, "", "has_no_odds"], [6, 6, 1, "", "has_odds"], [6, 4, 1, "", "num_forecasters"], [6, 4, 1, "", "options"], [6, 4, 1, "", "problem_id"], [6, 4, 1, "", "title"], [6, 6, 1, "", "unique_forecasters"], [6, 4, 1, "", "url"], [6, 5, 1, "", "validate_correct_option_idx"], [6, 5, 1, "", "validate_forecasts"]], "src.pm_rank.data.base.ProphetArenaForecastEvent": [[6, 4, 1, "", "submission_id"]], "src.pm_rank.data.loaders": [[8, 3, 1, "", "GJOChallengeLoader"], [8, 3, 1, "", "ProphetArenaChallengeLoader"]], "src.pm_rank.data.loaders.GJOChallengeLoader": [[8, 4, 1, "", "challenge_title"], [8, 5, 1, "", "get_challenge_metadata"], [8, 5, 1, "", "load_challenge"], [8, 4, 1, "", "logger"]], "src.pm_rank.data.loaders.ProphetArenaChallengeLoader": [[8, 4, 1, "", "challenge_title"], [8, 5, 1, "", "get_challenge_metadata"], [8, 5, 1, "", "load_challenge"], [8, 4, 1, "", "logger"], [8, 4, 1, "", "use_bid_for_odds"], [8, 4, 1, "", "use_open_time"]], "src.pm_rank.data.utils": [[9, 2, 1, "", "get_logger"], [9, 2, 1, "", "parse_json_or_eval"]], "src.pm_rank.model": [[14, 3, 1, "", "AverageReturn"], [14, 3, 1, "", "AverageReturnConfig"], [14, 3, 1, "", "BrierScoringRule"], [14, 3, 1, "", "CalibrationMetric"], [14, 3, 1, "", "GeneralizedBT"], [14, 3, 1, "", "LogScoringRule"], [14, 3, 1, "", "SphericalScoringRule"], [11, 0, 0, "-", "average_return"], [12, 0, 0, "-", "bradley_terry"], [13, 0, 0, "-", "calibration"], [15, 0, 0, "-", "irt"], [14, 2, 1, "", "kendall_correlation"], [16, 0, 0, "-", "scoring_rule"], [14, 2, 1, "", "spearman_correlation"], [17, 0, 0, "-", "utils"]], "src.pm_rank.model.AverageReturn": [[14, 4, 1, "", "bootstrap_ci_config"], [14, 4, 1, "", "break_tie_by_uniform"], [14, 5, 1, "", "fit"], [14, 5, 1, "", "fit_by_category"], [14, 5, 1, "", "fit_stream"], [14, 5, 1, "", "fit_stream_with_timestamp"], [14, 4, 1, "", "logger"], [14, 4, 1, "", "num_money_per_round"], [14, 4, 1, "", "process_problem_fn"], [14, 4, 1, "", "risk_aversion"], [14, 4, 1, "", "use_approximate"], [14, 4, 1, "", "use_binary_reduction"], [14, 4, 1, "", "verbose"]], "src.pm_rank.model.AverageReturnConfig": [[14, 5, 1, "", "__getitem__"], [14, 5, 1, "", "__post_init__"], [14, 5, 1, "", "__setitem__"], [14, 4, 1, "", "bootstrap_ci_config"], [14, 4, 1, "", "break_tie_by_uniform"], [14, 5, 1, "", "default"], [14, 5, 1, "", "get"], [14, 5, 1, "", "items"], [14, 5, 1, "", "keys"], [14, 4, 1, "", "num_money_per_round"], [14, 4, 1, "", "risk_aversion"], [14, 4, 1, "", "use_approximate"], [14, 4, 1, "", "use_binary_reduction"]], "src.pm_rank.model.BrierScoringRule": [[14, 4, 1, "", "negate"]], "src.pm_rank.model.CalibrationMetric": [[14, 5, 1, "", "fit"], [14, 4, 1, "", "logger"], [14, 4, 1, "", "num_bins"], [14, 5, 1, "", "plot"], [14, 4, 1, "", "strategy"], [14, 4, 1, "", "verbose"], [14, 4, 1, "", "weight_event"]], "src.pm_rank.model.GeneralizedBT": [[14, 5, 1, "", "fit"], [14, 4, 1, "", "logger"], [14, 4, 1, "", "method"], [14, 4, 1, "", "num_iter"], [14, 4, 1, "", "threshold"], [14, 4, 1, "", "verbose"]], "src.pm_rank.model.LogScoringRule": [[14, 4, 1, "", "clip_prob"]], "src.pm_rank.model.average_return": [[11, 3, 1, "", "AverageReturn"], [11, 3, 1, "", "AverageReturnConfig"]], "src.pm_rank.model.average_return.AverageReturn": [[11, 4, 1, "", "bootstrap_ci_config"], [11, 4, 1, "", "break_tie_by_uniform"], [11, 5, 1, "", "fit"], [11, 5, 1, "", "fit_by_category"], [11, 5, 1, "", "fit_stream"], [11, 5, 1, "", "fit_stream_with_timestamp"], [11, 4, 1, "", "logger"], [11, 4, 1, "", "num_money_per_round"], [11, 4, 1, "", "process_problem_fn"], [11, 4, 1, "", "risk_aversion"], [11, 4, 1, "", "use_approximate"], [11, 4, 1, "", "use_binary_reduction"], [11, 4, 1, "", "verbose"]], "src.pm_rank.model.average_return.AverageReturnConfig": [[11, 5, 1, "", "__getitem__"], [11, 5, 1, "", "__post_init__"], [11, 5, 1, "", "__setitem__"], [11, 4, 1, "", "bootstrap_ci_config"], [11, 4, 1, "", "break_tie_by_uniform"], [11, 5, 1, "", "default"], [11, 5, 1, "", "get"], [11, 5, 1, "", "items"], [11, 5, 1, "", "keys"], [11, 4, 1, "", "num_money_per_round"], [11, 4, 1, "", "risk_aversion"], [11, 4, 1, "", "use_approximate"], [11, 4, 1, "", "use_binary_reduction"]], "src.pm_rank.model.bradley_terry": [[12, 3, 1, "", "GeneralizedBT"]], "src.pm_rank.model.bradley_terry.GeneralizedBT": [[12, 5, 1, "", "fit"], [12, 4, 1, "", "logger"], [12, 4, 1, "", "method"], [12, 4, 1, "", "num_iter"], [12, 4, 1, "", "threshold"], [12, 4, 1, "", "verbose"]], "src.pm_rank.model.calibration": [[13, 3, 1, "", "CalibrationMetric"]], "src.pm_rank.model.calibration.CalibrationMetric": [[13, 5, 1, "", "fit"], [13, 4, 1, "", "logger"], [13, 4, 1, "", "num_bins"], [13, 5, 1, "", "plot"], [13, 4, 1, "", "strategy"], [13, 4, 1, "", "verbose"], [13, 4, 1, "", "weight_event"]], "src.pm_rank.model.irt": [[15, 3, 1, "", "IRTModel"], [15, 3, 1, "", "IRTObs"], [15, 3, 1, "", "MCMCConfig"], [15, 3, 1, "", "SVIConfig"]], "src.pm_rank.model.irt.IRTModel": [[15, 5, 1, "", "fit"], [15, 5, 1, "", "get_problem_level_parameters"], [15, 4, 1, "", "irt_obs"], [15, 4, 1, "", "logger"], [15, 4, 1, "", "method"], [15, 4, 1, "", "n_bins"], [15, 4, 1, "", "use_empirical_quantiles"], [15, 4, 1, "", "verbose"]], "src.pm_rank.model.irt.IRTObs": [[15, 4, 1, "", "anchor_points"], [15, 4, 1, "", "discretized_scores"], [15, 4, 1, "", "forecaster_id_to_idx"], [15, 4, 1, "", "forecaster_ids"], [15, 6, 1, "", "forecaster_idx_to_id"], [15, 4, 1, "", "problem_id_to_idx"], [15, 4, 1, "", "problem_ids"], [15, 6, 1, "", "problem_idx_to_id"], [15, 4, 1, "", "scores"]], "src.pm_rank.model.irt.MCMCConfig": [[15, 4, 1, "", "device"], [15, 4, 1, "", "num_workers"], [15, 4, 1, "", "save_result"], [15, 4, 1, "", "total_samples"], [15, 4, 1, "", "warmup_steps"]], "src.pm_rank.model.irt.SVIConfig": [[15, 4, 1, "", "device"], [15, 4, 1, "", "learning_rate"], [15, 4, 1, "", "num_steps"], [15, 4, 1, "", "optimizer"]], "src.pm_rank.model.scoring_rule": [[16, 3, 1, "", "BrierScoringRule"], [16, 3, 1, "", "LogScoringRule"], [16, 1, 1, "", "MAX_PROBLEM_WEIGHT_QUANTILE"], [16, 1, 1, "", "MIN_PROBLEM_WEIGHT_QUANTILE"], [16, 3, 1, "", "ScoringRule"], [16, 3, 1, "", "SphericalScoringRule"]], "src.pm_rank.model.scoring_rule.BrierScoringRule": [[16, 4, 1, "", "negate"]], "src.pm_rank.model.scoring_rule.LogScoringRule": [[16, 4, 1, "", "clip_prob"]], "src.pm_rank.model.scoring_rule.ScoringRule": [[16, 5, 1, "", "fit"], [16, 5, 1, "", "fit_by_category"], [16, 5, 1, "", "fit_stream"], [16, 5, 1, "", "fit_stream_with_timestamp"], [16, 4, 1, "", "logger"], [16, 4, 1, "", "verbose"]], "src.pm_rank.model.utils": [[17, 1, 1, "", "AGGREGATE_FNS"], [17, 3, 1, "", "BootstrapCIConfig"], [17, 1, 1, "", "DEFAULT_BOOTSTRAP_CI_CONFIG"], [17, 2, 1, "", "forecaster_data_to_rankings"], [17, 2, 1, "", "get_logger"], [17, 2, 1, "", "kendall_correlation"], [17, 2, 1, "", "log_ranking_table"], [17, 2, 1, "", "spearman_correlation"]], "src.pm_rank.model.utils.BootstrapCIConfig": [[17, 4, 1, "", "bootstrap_ci_level"], [17, 4, 1, "", "num_bootstrap_samples"], [17, 4, 1, "", "random_seed"], [17, 4, 1, "", "symmetric"]], "test_algo": [[18, 1, 1, "", "predictions_csv"], [18, 2, 1, "", "test_simple_case"]], "test_bootstrap": [[19, 2, 1, "", "test_bootstrap_average_return"], [19, 2, 1, "", "test_bootstrap_simple"]], "test_calibration": [[20, 2, 1, "", "test_perfect_calibration"], [20, 2, 1, "", "test_simple_calibration"]], "utils": [[21, 2, 1, "", "assign_time_bins"], [21, 2, 1, "", "calculate_time_to_last_submission"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method", "6": "py:property"}, "terms": {"": [0, 1, 4, 5, 15, 17, 19, 21, 22, 25], "0": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23], "001": [10, 12, 14], "005": 6, "01": [10, 14, 15, 16], "1": [0, 2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 22, 23], "10": [0, 10, 13, 14, 22], "100": [6, 7, 10, 12, 14, 15], "1000": [0, 1, 15, 17], "100k": 22, "101k": 22, "103": [22, 23], "12": [2, 21, 22, 23], "12h": 21, "16806": [22, 23], "19047v2": 13, "1e": [10, 12, 14], "2": [0, 6, 7, 8, 10, 22, 23], "200": 5, "2006": [22, 23], "2017": [22, 23], "2024": [22, 23], "2025": [22, 23], "2025\u5e747\u670826\u65e5": 23, "2026": 22, "2026\u5e74nba\u51a0\u519b": 23, "24": 2, "25": [16, 17], "2501": 13, "2507": [22, 23], "2625": 22, "27s_rank_correlation_coeffici": [10, 14, 17], "3": [2, 10, 12, 14, 22, 23, 25], "30": [22, 23], "33": 22, "4": [10, 13, 14, 22, 23], "42": [0, 1, 17], "45": 22, "5": [22, 23], "5985": [22, 23], "5998": [22, 23], "5\u65f6": 23, "6": [2, 15, 21, 22], "67": 22, "6h": 21, "7": [22, 23], "70": 22, "7375": 22, "75": 16, "8": 25, "9": 22, "90": [22, 23], "95": [0, 1, 17], "9\u5206\u949f": 23, "A": [2, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 22, 23], "At": [1, 19], "But": 25, "By": 22, "For": [0, 4, 13, 22, 25], "If": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 25], "In": [11, 13, 22, 23, 25], "It": [1, 2, 10, 14, 16, 21, 22, 25], "NO": [0, 25], "No": [15, 22], "On": 22, "One": 22, "The": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 22, 24, 25], "Their": [22, 23], "Then": 25, "These": 15, "To": [22, 25], "_": 13, "__getitem__": [11, 14], "__post_init__": [11, 14], "__setitem__": [11, 14], "a_": [22, 23], "a_i": [22, 23], "aaroth": 16, "abc": [6, 7, 10, 16], "abil": [10, 12, 14, 15, 22], "about": [6, 7, 8, 10, 23], "abov": [11, 13, 22], "abstract": [6, 7, 10, 16], "academ": 22, "acceler": 0, "access": [11, 14], "accommod": 22, "accord": 22, "accordingli": [10, 11, 14], "accur": [21, 22], "accuraci": [10, 14, 16, 22], "achiev": [11, 15, 22], "across": [0, 6, 7, 10, 11, 14, 22], "action": 22, "actual": [0, 10, 14, 16, 21, 22, 25], "adam": 15, "adapt": [12, 22], "add": [0, 8, 10, 16], "add_market_baselin": [8, 10], "add_market_baseline_predict": 0, "addit": [21, 22], "address": 22, "adjust": [1, 19], "adjusted_weight": 1, "admittedli": 22, "adopt": [13, 22], "after": [10, 11, 14, 15, 16, 22], "again": 22, "against": 22, "aggreg": [0, 17], "aggregate_fn": 17, "agt17": 16, "akin": 22, "al": [22, 23], "algo": 3, "algorithm": [10, 11, 12, 14, 15, 22, 25], "align": 22, "all": [0, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 22, 24, 25], "alloc": [0, 22], "allow": [10, 11, 14, 16, 22], "alongsid": 22, "alreadi": 0, "also": [0, 22, 25], "although": 22, "alwai": 2, "ambigu": 22, "amount": [0, 10, 11, 14, 22], "an": [1, 6, 7, 10, 12, 13, 14, 15, 21, 22, 23, 25], "analysi": [10, 11, 14, 16, 25], "analyz": 12, "anchor": 15, "anchor_point": 15, "ani": [6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 21, 22], "answer": [15, 22, 25], "api": [1, 25], "appli": [16, 24], "applic": 22, "approach": [15, 22], "approxim": [0, 10, 11, 14, 15, 21, 22], "ar": [0, 2, 6, 7, 10, 11, 14, 15, 16, 21, 22, 25], "arbitrag": 22, "arena": [6, 8, 10, 23, 25], "arg": [0, 1, 2, 4, 5, 6, 7, 8, 10, 17, 21], "around": [1, 22], "arrai": [1, 16], "arriv": [10, 11, 14, 16], "artifici": 22, "arxiv": [13, 22, 23], "ascend": [0, 17], "assertionerror": 15, "assess": 22, "assign": [0, 2, 21, 22], "assign_time_bin": 21, "associ": [10, 11, 14, 16], "assum": [15, 22], "assumpt": 22, "atom": 25, "audienc": 25, "august": 22, "author": 22, "auto": [0, 3], "autoapi": 3, "automat": 2, "avail": [21, 25], "availab": 22, "aver": [22, 23], "averag": [0, 4, 5, 10, 11, 14, 18, 19, 23], "average_return": [0, 1, 5, 14, 18, 25], "averagereturn": [10, 11, 14], "averagereturnconfig": [10, 11, 14], "avers": [10, 11, 14, 22], "axi": 5, "b": [15, 22, 23], "back": 21, "balanc": [10, 14, 16], "bar": [0, 1], "base": [2, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 25], "baselin": [0, 8, 10, 11, 14], "basemodel": [6, 7, 10, 15, 17], "basic": [7, 8, 10, 25], "batch": [10, 11, 14, 16, 25], "becaus": 22, "becom": 22, "been": 15, "befor": [2, 5, 15, 21], "begin": [22, 23, 25], "behind": [22, 25], "being": 22, "belief": [16, 22], "below": [11, 22, 25], "benchmark": 22, "best": 0, "bet": [0, 10, 11, 14, 22], "better": [0, 10, 14, 16, 17, 22], "bettor": 22, "between": [10, 11, 12, 14, 15, 16, 17, 22], "beyond": [22, 23], "bin": [0, 5, 10, 13, 14, 15, 21], "binari": [0, 10, 11, 13, 14, 22, 23], "bitcoin": 22, "blogpost": 25, "bo": [22, 23], "bool": [0, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17], "bootstrap": [0, 3, 10, 11, 14, 16, 17, 19], "bootstrap_ci": 16, "bootstrap_ci_config": [10, 11, 14, 16, 17], "bootstrap_ci_level": 17, "bootstrap_config": [0, 1], "bootstrapciconfig": [10, 11, 14, 16, 17], "both": [0, 15, 16, 22], "bottom": 25, "bound": [0, 1], "bradlei": [10, 12, 14], "bradley_terri": 14, "break": [10, 11, 14], "break_tie_by_uniform": [10, 11, 14], "brier": [0, 10, 14, 16, 22, 23], "brier_scor": [0, 1, 5], "brierscoringrul": [10, 14, 16], "bring": 25, "broader": 25, "bs_i": [22, 23], "bucket": [6, 7, 10, 11, 14, 16], "budget": [0, 22], "bui": [11, 22], "build": [8, 10, 25], "built": 22, "bypass": 22, "calcul": [0, 1, 2, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 22, 25], "calculate_time_to_last_submiss": [2, 21], "calibr": [0, 10, 14, 16, 20, 22], "calibrationmetr": [10, 13, 14], "callabl": 17, "can": [0, 7, 8, 10, 11, 15, 16, 22, 25], "capabl": [10, 12, 14, 22], "captur": [1, 22], "carlo": 15, "case": [18, 19, 20, 22, 23], "categori": [2, 6, 7, 10, 11, 14, 15, 16], "cd": 25, "cdot": 22, "cell": 24, "certain": [0, 15, 22], "chain": 15, "challeng": [6, 7, 8, 10, 15, 22, 25], "challenge_titl": [7, 8, 10], "challengeload": [6, 7, 8, 10, 25], "champion": 22, "championship": 22, "character": 22, "check": [6, 7, 9, 10], "choic": 22, "choos": [0, 22, 25], "chosen": 15, "chronolog": [6, 7, 10, 11, 14, 16], "ci": [0, 1, 16, 19], "ci_level": [0, 1], "class": [22, 23], "classmethod": [2, 11, 14], "clean": 22, "clearli": 22, "clip_prob": [10, 14, 16], "close": [2, 5, 6, 7, 10, 21, 22], "close_tim": [2, 8, 10, 21], "closer": 22, "colab": 25, "collect": [6, 7, 10, 11, 14, 16, 25], "column": [0, 1, 4, 5, 21], "combin": [0, 5, 7, 8, 10], "come": 22, "compar": [0, 10, 12, 14, 16, 18, 22], "comparison": [12, 22], "competitor": 12, "complementari": 22, "complex": 22, "compos": 12, "comprehens": [22, 25], "comput": [0, 1, 6, 7, 10, 14, 17, 22], "compute_average_return_neutr": [0, 4], "compute_bootstrap_ci": 1, "compute_brier_scor": 0, "compute_calibration_ec": 0, "concept": [12, 15, 16], "concret": [8, 22], "confer": [22, 23], "confid": [0, 1, 10, 11, 14, 16, 17, 19, 22, 23], "confidence_interv": 1, "config": [10, 11, 14, 15], "configur": [10, 11, 14, 15, 16, 17], "consensu": 22, "consid": 22, "consist": 22, "constant": 22, "construct": 0, "contain": [0, 3, 7, 8, 10, 11, 13, 14, 21, 25], "contest": [10, 12, 14, 22], "continu": [15, 22], "contract": [11, 22], "contribut": [10, 12, 14, 22, 25], "conveni": 22, "converg": [10, 12, 14, 22], "convert": 17, "core": 22, "correct": [6, 7, 10, 16, 22, 25], "correct_option_idx": [6, 7, 10, 25], "correctli": 15, "correl": [10, 14, 17, 22], "correspond": 22, "cosin": [10, 14, 16], "cost": 11, "could": [10, 11, 14, 22], "cours": 16, "covari": 13, "cpu": 15, "creat": [3, 11, 14, 22], "critic": 22, "crowd": [6, 7, 10], "crowd_prob": [6, 7, 10], "crra": [0, 10, 11, 14, 22, 23], "csv": [0, 4, 5, 18], "cuda": 15, "current": [13, 22, 25], "curv": 4, "custom": 15, "dai": [6, 7, 10, 11, 14, 16], "damani": [22, 23], "data": [0, 3, 10, 11, 12, 13, 14, 15, 16, 17, 22, 24, 25], "databas": 21, "dataclass": 25, "datafram": [0, 1, 2, 4, 5, 7, 8, 10, 21], "dataset": [22, 25], "date": 22, "datetim": [6, 7, 10], "deal": 22, "debug": 5, "decis": [22, 23], "deeper": 22, "deepli": 22, "default": [0, 1, 2, 5, 10, 11, 12, 14, 15, 16, 17, 22, 25], "default_bootstrap_ci_config": [10, 11, 14, 16, 17], "default_bootstrap_config": 0, "defin": [5, 6, 13, 15, 17, 21, 22, 25], "definit": [11, 13], "degre": 22, "demo": 25, "demonstr": 24, "denot": 22, "depend": [15, 22, 25], "deriv": 22, "descent": 15, "describ": 22, "design": [22, 25], "despit": 22, "detail": [22, 25], "detect": 0, "determin": 22, "determinist": 22, "develop": 25, "deviat": 13, "devic": 15, "dfrac": [22, 23], "diagram": [10, 13, 14], "dict": [0, 1, 2, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17], "dictionari": [1, 10, 13, 14, 15, 17], "differ": [6, 7, 8, 10, 11, 14, 15, 16, 24, 25], "difficult": 15, "difficulti": [15, 22], "difficulties_dict": 15, "dimens": [6, 7, 10], "direct": 22, "directli": 22, "discrep": 22, "discret": [0, 10, 13, 14, 15], "discretized_scor": 15, "discrimin": [15, 16, 22], "discriminations_dict": 15, "distinct": 22, "distinguish": [15, 22], "distribut": [5, 15, 22, 25], "divers": 22, "do": 22, "doc": 25, "document": [3, 22], "doe": [9, 22, 25], "dollar": [11, 22], "don": [15, 21], "done": [1, 19, 25], "dot": [22, 23], "downstream": 25, "downweight": 0, "draw": [15, 17], "driven": 22, "due": 22, "e": [0, 10, 11, 13, 14, 22, 23, 25], "e_1": [22, 23], "e_i": [22, 23], "e_n": [22, 23], "each": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 25], "earn": [10, 11, 14, 22], "easili": 22, "ec": [0, 13], "ece_scor": 0, "edg": [0, 10, 11, 14, 22, 23], "edu": 16, "effect": [10, 11, 14, 22], "effici": [22, 25], "either": [0, 6, 7, 8, 10, 11, 12, 14, 15, 16, 22], "elabor": 22, "eleg": 22, "elegantli": 22, "element": 22, "elicit": [22, 23], "elo": [10, 12, 14, 22], "elo\u8bc4\u5206\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u800c\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848": 23, "emili": [22, 23], "empir": [5, 13, 15, 22, 23], "en": [10, 14, 15, 17], "enabl": [10, 11, 12, 14, 15, 16], "end": [6, 7, 10, 22, 23], "end_tim": [6, 7, 8, 10], "engin": 15, "enjoi": 22, "ensur": [16, 22], "enter": [22, 25], "entir": 22, "environ": 22, "equal": [0, 10, 13, 14, 16, 22], "equat": [22, 23], "equiv": [22, 23], "equival": 22, "error": [0, 1, 13], "especi": 25, "essenti": 16, "establish": 22, "estim": [0, 1, 10, 12, 14, 15, 19, 22, 23], "et": [22, 23], "etc": 25, "evalu": [10, 11, 12, 14, 16, 17, 22], "even": 22, "evenli": 0, "event": [2, 4, 6, 7, 8, 10, 12, 13, 14, 22, 25], "event_tick": [0, 2, 4, 5, 21], "everi": [4, 6, 7, 10], "exact": 15, "exagger": 22, "exampl": [2, 21], "exceed": 22, "exclude_forecast": 2, "exclus": [2, 22], "expect": [0, 10, 11, 13, 14, 22, 25], "expect_typ": 9, "explor": [5, 22], "exponential_weight": 2, "express": [22, 23], "extend": [12, 22], "extens": 12, "extra": 22, "extrem": [10, 14, 16, 22], "f": 13, "facilit": 22, "factor": 22, "fail": 9, "faithfulli": 22, "fall": 21, "fals": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17], "familiar": 22, "far": 22, "fast": 15, "field": [8, 10, 11, 25], "figsiz": [10, 13, 14], "file": [7, 8, 10, 15], "filenam": [4, 5], "filter": [2, 21], "final": [0, 4, 10, 11, 14, 22], "financ": 23, "find": 22, "first": 25, "first_n_weight": 2, "fit": [10, 11, 12, 13, 14, 15, 16, 21, 22], "fit_by_categori": [10, 11, 14, 16], "fit_stream": [10, 11, 14, 16], "fit_stream_with_timestamp": [10, 11, 14, 16], "fix": 22, "flexibl": 22, "float": [0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17], "flowchart": 25, "focus": [1, 22], "follow": [13, 22], "forecast": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 19, 21, 22, 23, 25], "forecast_id": [6, 7, 10], "forecast_prob": 0, "forecast_problem": [6, 7, 10], "forecastchalleng": [6, 7, 8, 10, 25], "forecaster_data": 17, "forecaster_data_to_rank": 17, "forecaster_filt": [7, 8, 10], "forecaster_id": 15, "forecaster_id_to_idx": 15, "forecaster_idx_to_id": 15, "forecaster_map": [6, 7, 10], "forecastev": [6, 7, 10, 25], "forecastproblem": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 25], "forecasts_df": [5, 21], "form": 22, "format": [7, 8, 10, 15], "formul": 22, "fortun": 22, "foundat": 16, "four": 22, "frac": [22, 23], "fraction": [10, 12, 14, 22], "framework": [15, 22], "frequenc": 0, "from": [0, 1, 2, 4, 6, 7, 8, 10, 11, 13, 14, 15, 19, 21, 22, 25], "from_prophet_arena_csv": 2, "full": [8, 10, 24, 25], "fulli": 22, "function": [6, 11, 16, 22, 25], "furthermor": 22, "g": [22, 25], "gain": 22, "gamma": [22, 23], "gap": [2, 5, 21], "gener": [3, 10, 12, 14, 23], "generalizedbt": [10, 12, 14], "get": [6, 7, 8, 10, 11, 14, 15, 16], "get_challenge_metadata": [6, 7, 8, 10], "get_forecaster_problem": [6, 7, 10], "get_logg": [9, 17], "get_problem": [6, 7, 10, 25], "get_problem_by_id": [6, 7, 10], "get_problem_level_paramet": 15, "give": [16, 25], "given": [7, 8, 10, 11, 12, 13, 14, 15, 16, 22, 25], "gjo": [7, 8, 10], "gjochallengeload": [7, 8, 10], "go": 4, "good": [7, 8, 10, 14, 16, 22, 23], "gradient": 15, "gradual": 25, "greatest": 22, "group": [0, 8, 10, 16], "group_col": 2, "groupbi": [8, 10], "guarante": [10, 12, 14, 22], "guess": 22, "guid": 22, "ha": [6, 7, 10, 12, 15, 22], "had": 2, "hamiltonian": 15, "hand": 22, "handi": 25, "handl": [2, 10, 12, 14, 15], "has_no_odd": [6, 7, 10], "has_odd": [6, 7, 10], "have": [0, 4, 6, 7, 10, 11, 13, 22, 25], "heavili": [10, 14, 16], "help": 22, "helper": 15, "henc": 22, "here": [22, 25], "hierarch": 25, "high": [22, 25], "higher": [10, 14, 16, 22, 25], "highest": [16, 22], "highli": 22, "histogram": 5, "hold": 22, "honest": 16, "hour": [2, 5, 21], "how": [0, 2, 10, 11, 14, 15, 21, 24, 25], "howev": [22, 25], "html": [12, 25], "http": [10, 12, 13, 14, 15, 16, 17], "huang": [22, 23], "huang06a": 12, "human": [22, 25], "hyperparamet": 22, "hypothet": 22, "i": [0, 1, 6, 7, 10, 11, 12, 14, 15, 16, 17, 19, 22, 23, 25], "i1": [22, 23], "i2": [22, 23], "id": [6, 7, 10, 15, 25], "identifi": 25, "ignor": [0, 7, 8, 10, 11, 14], "ii": [22, 23], "ik": [22, 23], "illustr": 25, "implement": [0, 8, 10, 11, 12, 14, 15, 16, 18, 20, 22, 25], "impli": [8, 10, 11, 22], "implicitli": 22, "implied_prob": 11, "import": [1, 11, 16, 22], "importantli": 22, "in_i": [22, 23], "incentiv": 16, "includ": [0, 2, 7, 8, 10, 11, 12, 14, 15, 16, 17, 21], "include_bootstrap_ci": [10, 11, 14, 16, 17], "include_per_problem_info": [10, 11, 14, 16], "include_scor": [10, 11, 12, 13, 14, 15, 16, 17], "inclus": 2, "incorpor": 22, "incorrect": 22, "increment": [6, 7, 10, 11, 14, 16], "increment_bi": [6, 7, 10], "independ": 25, "index": [0, 25], "indic": [10, 11, 14, 15, 16, 22], "individu": [1, 6, 7, 10, 11, 14, 19, 22, 25], "inf": 2, "infer": 15, "influenc": 22, "info": [6, 7, 10, 11, 14, 16], "inform": [16, 22, 25], "inher": 22, "inherit": 25, "initi": [7, 8, 10, 11, 12, 13, 14, 15, 16, 22], "innov": 22, "insight": [15, 22, 24, 25], "inspir": 22, "instanc": [10, 11, 12, 13, 14, 15, 16], "instead": [0, 15], "int": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17], "integr": 25, "intens": 22, "interest": 25, "interfac": [24, 25], "intermedi": [11, 14, 22], "intern": 15, "interpol": 22, "interpret": 22, "interv": [1, 10, 11, 14, 16, 17, 19], "intrigu": 22, "introduc": [22, 25], "intuit": [10, 12, 14, 22], "invalid": 15, "invers": 0, "involv": 22, "irt": [14, 25], "irt_ob": 15, "irtmodel": 15, "irtob": 15, "irt\u6a21\u578b": 23, "irt\u6a21\u578b\u4e2d\u76f4\u63a5\u62df\u5408\u7684llm\u80fd\u529b\u53c2\u6570": 23, "irt\u6a21\u578b\u5047\u8bbe\u4e8c\u5143\u7ed3\u679c": 23, "item": [11, 14, 15, 23], "item_response_theori": 15, "iter": [1, 6, 7, 10, 11, 12, 14, 16, 19, 25], "its": [6, 7, 10, 22, 25], "j": [22, 23], "jmlr": 12, "jointli": 22, "journal": [22, 23], "json": 9, "judgment": [7, 8, 10, 22, 23], "just": [10, 11, 12, 14, 16, 22], "k": [15, 22, 23], "kalshi": [22, 23], "keep": [2, 22, 25], "kei": [1, 11, 12, 14, 15, 16, 22, 25], "kendal": [10, 14, 17], "kendall_correl": [10, 14, 17], "kendall_rank_correlation_coeffici": [10, 14, 17], "kuo": [22, 23], "l_i": [22, 23], "label": [5, 21], "labor": 22, "lambda_": 2, "languag": [22, 23], "larg": 22, "larger": [17, 22], "last": 21, "last_n_weight": 2, "latent": 15, "le": [22, 23], "learn": [15, 22, 23], "learning_r": 15, "lect23": 16, "leg": [10, 11, 14], "length": 1, "less": [10, 14, 16], "level": [0, 1, 11, 14, 15, 17, 22, 25], "leverag": 25, "li": [22, 23], "librari": 15, "like": [11, 14, 22, 25], "likewis": 22, "limit": [2, 22], "linear": 22, "link": [22, 23], "list": [2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 25], "liter": [0, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17], "ll": 22, "llm": [13, 25], "llm\u53ea\u63d0\u4f9b\u6982\u7387\u6027\u4f30\u8ba1": 23, "llm\u7684\u6982\u7387\u548c\u5e02\u573a\u8d54\u7387": 23, "llm\u7684\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u6982\u7387\u5411\u91cf": 23, "lm": [22, 23], "lmarena": [22, 23], "load": [0, 6, 7, 8, 10, 24, 25], "load_challeng": [6, 7, 8, 10, 25], "loader": [7, 25], "log": [10, 11, 12, 14, 15, 16, 17, 22, 23], "log_ranking_t": 17, "logarithm": [10, 14, 16, 22], "logger": [2, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17], "logic": [6, 7, 10, 18], "logist": 22, "logscoringrul": [10, 14, 16], "long": 22, "lose": [10, 12, 14, 22], "lower": [0, 1, 5, 22], "lower_bound": 21, "m": 0, "machin": [22, 23], "made": [2, 21, 25], "maintain": [10, 11, 14, 16], "major": [10, 12, 14], "make": [22, 23, 24, 25], "mani": [2, 21], "manner": 25, "manual": 0, "map": [1, 6, 7, 10, 11, 14, 15, 16, 17], "margin": [10, 11, 14], "market": [0, 2, 5, 6, 8, 10, 11, 12, 13, 14, 16, 21, 22, 24, 25], "market_data": 2, "market_outcom": 2, "market_weight": 0, "markov": 15, "match": [6, 7, 9, 10, 22], "math": 22, "mathbb": 13, "mathemat": [16, 22], "matrix": 0, "max": [4, 17], "max_hour": [2, 5], "max_k": [22, 23], "max_problem_weight_quantil": 16, "max_round": 4, "max_row": 17, "maxim": 22, "maximum": [2, 5, 10, 12, 14], "mcmc": 15, "mcmcconfig": 15, "mean": [10, 11, 14, 17, 22], "meanwhil": 22, "measur": [0, 10, 13, 14, 16, 22], "median": 17, "mehul": [22, 23], "mention": 22, "merg": 4, "merge_everi": 4, "metadata": [6, 7, 8, 10, 25], "metadata_fil": [7, 8, 10], "method": [10, 11, 12, 14, 15, 16, 22, 23, 24, 25], "meticul": 22, "metric": [10, 13, 14, 19, 20, 23, 25], "might": [17, 25], "migrat": 22, "min": 17, "min_bucket_s": [6, 7, 10, 11, 14, 16], "min_hour": 2, "min_problem_weight_quantil": 16, "mind": 22, "minim": [10, 12, 14, 25], "minimum": [2, 7, 8, 10, 11, 14, 16], "minu": [10, 11, 14], "minut": 22, "mispric": 22, "mm": [10, 12, 14], "model": [6, 7, 10, 23, 25], "model_rename_dict": [4, 5], "modul": [15, 22, 25], "monei": [0, 10, 11, 14, 22, 25], "mont": 15, "month": [6, 7, 10, 11, 14, 16], "more": [2, 16, 22, 25], "most": [22, 25], "move": 22, "much": [10, 11, 14, 22, 25], "multi": [22, 23], "multipl": [2, 6, 7, 10, 22], "multiprocess": 15, "must": 15, "mutual": 22, "n": [2, 4, 22, 23], "n_bin": 15, "n_i": [22, 23], "name": [0, 1, 9, 10, 11, 13, 14, 15, 17], "natur": [22, 23], "nba": 22, "ndarrai": [1, 2, 16], "need": [11, 22], "neg": [6, 7, 10], "negat": [10, 14, 16], "neutral": [0, 11, 14, 22], "new": [18, 20, 24], "nightli": [1, 18], "nightlyforecast": 2, "no_bid": [8, 10], "no_odd": [0, 6, 7, 10, 25], "non": [6, 7, 10, 22, 25], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17], "normal": [8, 10, 14, 16], "normalize_by_round": 0, "note": [11, 15, 19, 22, 25], "notebook": 24, "noth": 22, "novel": 22, "now": 22, "np": 0, "nuanc": 22, "num": [6, 7, 10], "num_bin": [0, 10, 13, 14], "num_bootstrap_sampl": 17, "num_chain": 15, "num_forecast": [6, 7, 10, 25], "num_it": [10, 12, 14], "num_market": 0, "num_money_per_round": [0, 10, 11, 14], "num_s": [0, 1], "num_sampl": [0, 1], "num_step": 15, "num_work": 15, "number": [0, 1, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 22, 25], "numer": 22, "numpi": [1, 2, 16], "nut": 15, "nutshel": 25, "o_": [22, 23], "object": [7, 8, 10, 11, 12, 14, 15, 22], "observ": 22, "obtain": 25, "obtan": 22, "obviou": 22, "occur": [0, 22], "odd": [0, 6, 7, 10, 11, 22, 25], "offer": 22, "often": 22, "onc": [10, 11, 14, 22, 25], "one": [2, 22], "onli": [0, 1, 2, 6, 7, 10, 11, 14, 15, 22], "open": [7, 8, 10, 22, 23, 24], "open_tim": [8, 10], "opportun": [2, 22], "optim": [10, 12, 14, 15, 22], "option": [0, 6, 7, 10, 16, 21, 22, 25], "order": [6, 7, 10, 11, 14, 16], "ordereddict": [10, 11, 14, 16], "org": [10, 12, 13, 14, 15, 17], "organ": 25, "origin": [18, 25], "other": [10, 12, 14, 22], "otherwis": [17, 21, 22], "our": [11, 22, 25], "out": [2, 11, 21, 24], "outcom": [0, 10, 11, 12, 13, 14, 16, 22], "output": 4, "over": [4, 5, 10, 11, 14, 16, 22, 25], "overconfid": [10, 14, 16], "overview": 25, "own": [1, 19, 22, 25], "p": [0, 13, 15], "p_": [22, 23], "p_i": 11, "packag": [22, 25], "page": 3, "pai": [11, 22], "pair": [11, 13, 14], "pairwis": [12, 22], "panda": [0, 1, 2, 4, 5, 7, 8, 10, 21], "paper": [12, 22], "parallel": 15, "paramet": [0, 1, 8, 10, 11, 12, 13, 14, 15, 16, 17, 22], "pars": [8, 9, 10], "parse_json_or_ev": 9, "particip": [6, 7, 10, 22], "particular": 25, "particularli": 22, "path": [7, 8, 10], "pattern": 15, "payoff": 22, "pd": [7, 8, 10], "pdf": [13, 16], "penal": [10, 14, 16], "per": [0, 10, 11, 14, 16], "per_problem_info": [10, 11, 14, 16], "percent": [10, 13, 14], "perfectli": [0, 13, 20], "perform": [1, 4, 5, 10, 11, 14, 15, 16, 22], "perhap": 22, "person": [15, 22], "pick": 22, "pip": 25, "pipelin": 25, "pl": [22, 23], "placehold": 25, "platform": [22, 25], "pleas": [22, 25], "plot": [3, 5, 10, 13, 14, 22], "plot_score_over_round": 4, "plot_score_over_time_bin": 5, "plot_time_gap_distribut": 5, "plot_time_gap_histogram": 5, "plot_timestamp": 3, "pm": 24, "pm_rank": [22, 23, 25], "point": [1, 15, 25], "popular": 22, "post": 22, "posterior": 15, "potenti": [22, 25], "pp": [22, 23], "practic": [13, 22], "precis": 22, "predict": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25], "prediction_col": 2, "prediction_weight": 0, "predictions_10_01": 18, "predictions_10_01_to_09_01": [4, 5], "predictions_10_11_to_01_01": 0, "predictions_csv": [0, 2, 4, 5, 18], "predictions_df": [7, 8, 10], "predictions_fil": [7, 8, 10], "predictor": [13, 22], "predictor_nam": 2, "prefer": 22, "preprint": [22, 23], "present": 2, "prevent": [2, 10, 14, 16], "previous": 22, "price": 22, "primari": 22, "principl": [1, 22], "prob": [6, 7, 10, 11, 25], "probabilist": [10, 12, 13, 14, 15, 16], "probabl": [0, 6, 7, 8, 10, 11, 12, 14, 15, 16, 22, 23, 25], "problem": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 22, 25], "problem_discrimin": 16, "problem_filt": [7, 8, 10], "problem_id": [6, 7, 10, 15, 25], "problem_id_to_idx": 15, "problem_idx_to_id": 15, "problem_it": [10, 11, 14, 16], "problem_time_it": [10, 11, 14, 16], "proce": 0, "procedur": 22, "proceed": [22, 23], "process": [10, 11, 13, 14, 16, 22, 23], "process_problem_fn": [10, 11, 14], "profil": [11, 22], "program": 15, "progress": [0, 1], "project": 25, "proper": [10, 14, 16, 22, 23], "properli": [1, 19], "properti": [6, 7, 10, 13, 15, 22], "prophet": [6, 8, 10, 23, 25], "prophetarena": [22, 23], "prophetarenachallengeload": [8, 10], "prophetarenaforecastev": 6, "proport": [10, 12, 14, 22], "proportion": 22, "propto": [22, 23], "provid": [0, 1, 6, 7, 8, 10, 11, 12, 14, 15, 16, 22, 25], "pseudo": [10, 12, 14, 22], "psychometr": [15, 22], "publish": 22, "pure": 22, "py": [2, 18], "pydant": [6, 7, 10, 15, 17], "pyro": 15, "python": [9, 22, 25], "pytorch": 25, "q_": [22, 23], "quadrat": [10, 14, 16], "quantil": [0, 10, 13, 14, 15], "question": [22, 25], "rais": [10, 11, 14, 15], "random": [0, 1, 6, 7, 10, 17], "random_se": [0, 1, 17], "rang": 2, "rank": [0, 1, 10, 11, 12, 14, 15, 16, 17, 24], "rank_df": 0, "rank_dict_a": [10, 14, 17], "rank_dict_b": [10, 14, 17], "rank_forecasters_by_scor": 0, "ranking_result": 17, "rankings_dict": 15, "rate": [10, 12, 14, 15, 22], "rather": [16, 22], "ratio": [10, 11, 14], "rational": [22, 23], "read": 22, "real": [22, 25], "realiti": 22, "realiz": [10, 12, 14, 22, 25], "reason": [22, 23, 25], "receiv": 22, "recent": 22, "recommend": 22, "record": 4, "reduct": [0, 10, 11, 14], "refer": [0, 10, 12, 13, 14, 15, 16, 17, 25], "reference_forecast": 0, "reflect": [22, 23], "refus": 22, "regardless": 2, "rel": [10, 11, 12, 14], "relationship": 15, "reli": 22, "reliabl": [10, 13, 14, 22], "remain": 22, "remark": 22, "renam": 2, "replac": [1, 19], "report": 16, "repres": [10, 12, 14, 15, 21, 22, 25], "reproduc": [0, 1, 17], "requir": [6, 7, 10, 15, 22, 25], "resampl": [1, 19], "research": [22, 23], "resolv": 25, "respect": 22, "respons": [15, 23], "rest": 22, "result": [0, 10, 11, 12, 14, 15, 16, 17, 22, 24, 25], "result_df": [0, 1, 4, 5], "retriev": 22, "return": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25], "reward": [10, 14, 16, 22, 23], "richer": 22, "right": 22, "risk": [0, 10, 11, 14, 22], "risk_avers": [0, 10, 11, 14], "rl": 22, "robust": 22, "robustli": 22, "root": 22, "round": [0, 2, 4, 10, 11, 14], "row": [1, 4, 21], "rule": [10, 14, 15, 16, 23], "run": [15, 24, 25], "sai": 22, "same": [0, 1, 6, 7, 10, 11, 14, 22], "sampl": [0, 1, 15, 17, 19], "sampler": 15, "save": [4, 5, 15], "save_path": [10, 13, 14], "save_result": 15, "sayself": [22, 23], "scale": 22, "scenario": [10, 12, 14, 22, 25], "scenarior": 22, "scope": 22, "score": [0, 1, 4, 10, 11, 12, 14, 15, 16, 17, 19, 23, 24, 25], "score_col": [0, 1, 4, 5], "scores_dict": 15, "score\u7684\u53d8\u4f53": 23, "score\u8fd9\u6837\u7684\u8bc4\u5206\u89c4\u5219\u63d0\u4f9b\u4e86\u66f4\u4e30\u5bcc\u7684\u4fe1\u606f": 23, "scoring_rul": 14, "scoringrul": [10, 14, 16], "script": [18, 19, 20], "sd": [10, 11, 14], "se": [0, 1], "see": [11, 24, 25], "seed": [0, 1, 17], "self": [22, 23], "sens": 22, "sensit": [10, 14, 16], "separ": [1, 6, 7, 10, 19, 22], "sequenti": [6, 7, 10], "serious": 22, "serv": 22, "set": [6, 7, 10, 11, 14, 17, 22, 25], "set_unnormalized_probs_default": [6, 7, 10], "setup": 22, "sever": 22, "sgd": 15, "shape": [0, 15], "sharp": [10, 11, 14], "sharpe_mod": [10, 11, 14], "short": 22, "should": [0, 22], "show": [0, 1, 4, 5, 22], "show_progress": [0, 1], "sida": [22, 23], "side": [0, 22], "signifi": 11, "similar": [10, 12, 14, 16], "simpl": [18, 19, 20, 22], "simpler": 22, "simpli": [8, 10, 22], "simplic": 22, "simplifi": [1, 22], "simplify_market_outcom": 2, "simplify_predict": 2, "simul": [22, 25], "sinc": [15, 22, 25], "singl": [2, 22, 25], "skill": [10, 12, 14, 15], "slide": 16, "slight": 22, "slow": 15, "slurm": [0, 4, 5, 18], "smaller": [17, 22], "smooth": [6, 7, 10], "smooth_odd": [6, 7, 10], "smooth_odds_ep": 6, "smoothli": 22, "snapshot_tim": [2, 21], "so": [10, 14, 16, 22, 25], "sole": 22, "solut": 22, "solv": 22, "some": [22, 25], "someon": 22, "sometim": 22, "sourc": [6, 7, 8, 10, 22, 25], "spearman": [10, 14, 17], "spearman_correl": [10, 14, 17], "special": [2, 6], "specif": [5, 6, 7, 10, 22], "specifi": [15, 22], "spend": [10, 11, 14], "spheric": [10, 14, 16, 22, 23], "sphericalscoringrul": [10, 14, 16], "sphinx": 3, "sport": [22, 23], "spread": 0, "spread_market_even": 0, "squar": [10, 14, 16], "src": 25, "standalon": 22, "standard": [0, 1, 25], "standard_error": 1, "static": 2, "statist": 12, "step": [15, 25], "stochast": 15, "str": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "straightforward": 22, "strategi": [0, 10, 11, 13, 14, 22], "stream": [6, 7, 10, 11, 14, 16, 24, 25], "stream_increment_bi": [10, 11, 14, 16], "stream_problem": [6, 7, 10, 25], "stream_problems_over_tim": [6, 7, 10], "stream_with_timestamp": [10, 11, 14, 16], "strength": [12, 22], "string": [6, 7, 10], "strong": 22, "structur": 6, "subclass": 25, "submiss": [2, 21], "submission_col": 2, "submission_count": 2, "submission_id": [6, 8, 10], "submissions_csv": 2, "subpackag": [7, 14], "suffici": 22, "suggest": 22, "suit": 22, "suitabl": 25, "sum": [6, 7, 8, 10, 22], "sum_": [22, 23], "support": [0, 15, 25], "suppos": 22, "sure": 24, "svi": 15, "sviconfig": 15, "symmetr": [1, 17], "synthes": 22, "synthet": [18, 19, 20], "system": 22, "t": [15, 21], "tab": 24, "tabl": 17, "take": [4, 17], "task": 22, "teach": [22, 23], "team": [10, 12, 14, 22], "technic": 22, "tend": 22, "tensor": 15, "term": 22, "terri": [10, 12, 14], "test": [18, 19, 20], "test_algo": 3, "test_bootstrap": 3, "test_bootstrap_average_return": 19, "test_bootstrap_simpl": 19, "test_calibr": 3, "test_perfect_calibr": 20, "test_simple_calibr": 20, "test_simple_cas": 18, "text": [13, 22, 23], "th": 22, "than": [2, 16, 22], "thei": [2, 6, 7, 10, 11, 14, 16, 22], "them": [6, 10, 11, 14], "theoret": 13, "theori": [15, 23], "therefor": 22, "theta": 12, "theta_": [22, 23], "thi": [0, 1, 2, 3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25], "thoroughli": 22, "those": [22, 25], "though": 22, "three": 22, "threshold": [10, 12, 14], "through": [22, 25], "thu": 22, "tianyang": [22, 23], "tie": [10, 11, 14], "time": [2, 5, 6, 7, 10, 16, 21, 22, 25], "time_bin": [5, 21], "time_col": 2, "time_rank": [0, 2], "time_to_last": [2, 5, 21], "time_to_last_weight": 2, "timestamp": [6, 7, 10, 11, 14, 16, 25], "titl": [6, 7, 8, 10, 13, 14, 25], "too": [6, 7, 10], "tool": 22, "toolkit": [10, 25], "torch": 15, "total": [6, 7, 10, 15, 22], "total_sampl": 15, "track": 25, "tradit": [10, 12, 14, 22], "tradition": 22, "train": [22, 23], "transform": 15, "translat": 22, "treat": [10, 12, 13, 14, 25], "trivial": 22, "true": [0, 1, 8, 10, 11, 12, 13, 14, 15, 16, 17, 22], "truli": 22, "trust": 22, "truth": 22, "try": [9, 24], "tupl": [1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 21], "turn": [0, 15, 22], "turn_market_data_to_odd": 2, "two": [0, 10, 12, 14, 15, 17, 22, 25], "type": [0, 6, 9], "typic": 22, "tzu": [22, 23], "u": [15, 22, 25], "u_": [22, 23], "uncertainti": [1, 19, 22, 23], "uncov": 22, "under": 22, "understand": 22, "unifi": 25, "uniform": [0, 10, 11, 13, 14, 15], "uniform_weight": 2, "uniqu": [6, 7, 10, 25], "unique_forecast": [6, 7, 10], "unit": [10, 14, 16, 25], "unlik": 22, "unnorm": [6, 7, 10, 25], "unnormalized_prob": [6, 7, 10, 25], "unweight": 22, "up": [22, 25], "upcom": 22, "updat": [10, 12, 14], "upenn": 16, "upper": [0, 1, 2, 5], "upper_bound": 21, "url": [6, 7, 10, 25], "us": [0, 1, 2, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25], "use_approxim": [10, 11, 14], "use_bid_for_odd": [8, 10], "use_binary_reduct": [10, 11, 14], "use_both_sid": 0, "use_empirical_quantil": 15, "use_open_tim": [8, 10], "user": [6, 7, 10, 22, 25], "usernam": [6, 7, 10, 25], "usual": 22, "util": [0, 2, 3, 7, 10, 11, 14, 16, 22], "v": [6, 7, 10], "v7": 12, "val": 9, "valid": [6, 7, 10, 11, 14, 18, 25], "validate_categori": [6, 7, 10], "validate_correct_option_idx": [6, 7, 10], "validate_forecast": [6, 7, 10], "validate_odd": [6, 7, 10], "validate_prob": [6, 7, 10], "validate_problem": [6, 7, 10], "validate_unnormalized_prob": [6, 7, 10], "validate_weight": [6, 7, 10], "valu": [9, 10, 11, 14, 15, 16, 22], "valuabl": 22, "valueerror": [10, 11, 14], "vari": 22, "variant": 22, "variat": [15, 22], "variou": 16, "ve": 22, "vector": [6, 7, 10, 14, 16, 22], "verbos": [10, 11, 12, 13, 14, 15, 16], "veri": 15, "verifi": 22, "versatil": 22, "version": [13, 22, 25], "via": [13, 25], "view": [12, 22], "violat": 22, "visual": [4, 5, 24], "w": [22, 23], "w_i": [22, 23], "wa": 21, "wai": 25, "walk": 25, "want": [22, 25], "warmup": 15, "warmup_step": 15, "we": [0, 1, 4, 6, 7, 10, 11, 12, 13, 14, 15, 19, 25], "weak": 22, "week": [6, 7, 10, 11, 14, 16], "weight": [0, 1, 2, 4, 5, 6, 7, 10, 13, 14, 16, 19, 22], "weight_ev": [0, 10, 13, 14], "weight_fn": [0, 2], "weightingstrategi": 2, "welcom": 25, "well": [0, 10, 14, 15, 16, 22], "were": 2, "when": [0, 10, 11, 14], "whenev": 22, "where": [1, 12, 22, 25], "whether": [0, 1, 8, 10, 11, 12, 13, 14, 15, 16, 17], "which": [0, 6, 7, 10, 11, 12, 14, 15, 16, 17, 22], "while": 22, "who": 25, "why": 15, "wide": [10, 14, 16, 22], "wiki": [10, 14, 15, 17], "wikipedia": [10, 14, 15, 17], "win": [10, 12, 14, 22], "within": [0, 2, 16], "without": [6, 7, 10], "word": 22, "work": 22, "worker": 15, "world": [22, 25], "worth": 22, "would": 25, "www": [12, 16], "x": [5, 11, 13, 14], "xu": [22, 23], "y": 13, "ye": [0, 22, 25], "yes_ask": [8, 10], "yes_bid": [8, 10], "yes_odd": 0, "yet": [15, 22], "yield": 22, "you": [22, 25], "yuanchao": [22, 23], "zero": 22, "\u03b8": 15, "\u4e00\u4e2a\u4eba\u5b8c\u5168\u4fe1\u4efbllm\u7684\u6982\u7387\u4f5c\u4e3a\u4ed6\u4eec\u7684\u771f\u5b9e\u4fe1\u5ff5": 23, "\u4e00\u4e2a\u4eba\u80fd\u8d5a\u591a\u5c11\u94b1": 23, "\u4e00\u4e2a\u597d\u7684\u5206\u6570\u610f\u5473\u7740llm\u80fd\u591f\u6709\u6548\u7efc\u5408\u63d0\u4f9b\u7684\u4fe1\u606f": 23, "\u4e00\u4e2a\u6821\u51c6\u826f\u597d\u7684\u9884\u6d4b\u8005\u5177\u6709\u8fd9\u6837\u7684\u7279\u6027": 23, "\u4e00\u4e2a\u83b7\u80dc\u56e2\u961f": 23, "\u4e00\u65e6\u4e8b\u4ef6\u7ed3\u679c\u786e\u5b9a": 23, "\u4e00\u65e6\u6211\u4eec\u83b7\u5f97\u8db3\u591f\u7684\u6570\u636e": 23, "\u4e00\u65e6\u786e\u5b9a\u4e86\u8fd9\u4e9b\u56e0\u7d20": 23, "\u4e00\u79cd\u5e7f\u4e3a\u4eba\u77e5\u7684": 23, "\u4e00\u7f8e\u5143": 23, "\u4e0a\u4e0b\u7684\u8d4c\u6ce8": 23, "\u4e0b\u56fe\u663e\u793a\u4e86\u56db\u4e2allm\u5728": 23, "\u4e0b\u7684\u6536\u76ca": 23, "\u4e0d\u53c2\u4e0e\u8ba1\u7b97": 23, "\u4e0e\u5e02\u573a\u9690\u542b\u6982\u7387\u8fdb\u884c\u6bd4\u8f83": 23, "\u4e0e\u66f4\u7b80\u5355\u7684\u6307\u6807\u4e0d\u540c": 23, "\u4e0e\u7b80\u5355\u7684\u51c6\u786e\u7387\u5ea6\u91cf\u4e0d\u540c": 23, "\u4e2a\u4e8b\u4ef6": 23, "\u4e2a\u4e8b\u4ef6\u5728": 23, "\u4e2a\u4e92\u65a5\u7684\u6f5c\u5728\u7ed3\u679c": 23, "\u4e2a\u4f53": 23, "\u4e2d": 23, "\u4e2d\u7684\u9ed8\u8ba4\u8bc4\u5206\u6307\u6807\u662f": 23, "\u4e2d\u95f4\u98ce\u9669\u538c\u6076": 23, "\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 23, "\u4e3a\u7b80\u5316\u8d77\u89c1": 23, "\u4e4b\u95f4\u7684\u7ade\u8d5b": 23, "\u4e8b\u4ef6": 23, "\u4e8b\u4ef6\u4e2d\u8d5a\u5230\u66f4\u591a\u7684\u94b1": 23, "\u4e8b\u4ef6\u4e2d\u9884\u6d4b\u80fd\u529b\u5f88\u5f3a": 23, "\u4e8b\u4ef6\u65b9\u9762\u660e\u663e\u4f18\u4e8e": 23, "\u4e8b\u4ef6\u65b9\u9762\u7565\u900a\u4e8e": 23, "\u4e8b\u4ef6\u9700\u8981\u66f4\u591a\u7684\u4fe1\u606f\u805a\u5408": 23, "\u4eba\u7c7b": 23, "\u4ece\u800c\u521b\u9020\u5957\u5229\u673a\u4f1a": 23, "\u4ece\u800c\u9690\u5f0f\u5730\u4e3a\u8fd9\u4e9b\u4fe1\u606f\u91cf\u66f4\u5927\u7684\u4e8b\u4ef6\u5206\u914d\u66f4\u9ad8\u7684\u6743\u91cd": 23, "\u4ee5\u4fc3\u8fdb\u5728\u4e00\u822c\u9884\u6d4b\u5e02\u573a\u73af\u5883\u4e2d\u5bf9llm\u8fdb\u884c\u66f4\u597d\u7684\u8bc4\u4f30": 23, "\u4ee5\u53ca\u4e00\u79cd": 23, "\u4ee5\u66f4\u6df1\u5165\u5730\u6d1e\u5bdfllm\u7684\u8868\u73b0": 23, "\u4efb\u4f55": 23, "\u4f18\u52bf": 23, "\u4f1a\u5c06\u5168\u90e8\u8d4c\u6ce8\u62bc\u5728llm\u6982\u7387\u4e0e\u5e02\u573a\u8d54\u7387\u4e4b\u95f4\u5dee\u5f02\u6700\u5927\u7684\u9009\u9879\u4e0a": 23, "\u4f1a\u6bd4": 23, "\u4f20\u7edf\u7684\u51c6\u786e\u7387\u5ea6\u91cf\u53d8\u5f97\u6a21\u7cca": 23, "\u4f2a\u56e2\u961f": 23, "\u4f46\u5b83\u4ecd\u7136\u662f\u6211\u4eec\u8bc4\u4f30\u5de5\u5177\u5957\u4ef6\u4e2d\u7684\u4e00\u4e2a\u6709\u4ef7\u503c\u7684\u8865\u5145": 23, "\u4f46\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u719f\u6089\u7684\u6bd4\u8f83\u8bc4\u7ea7\u65b9\u6cd5": 23, "\u4f46\u5b83\u65e0\u6cd5\u5728\u90a3\u91cc\u521b\u9020\u5957\u5229\u673a\u4f1a": 23, "\u4f46\u6211\u4eec\u4e5f\u5728": 23, "\u4f46\u6211\u4eec\u7684\u5b9e\u73b0\u4e5f\u652f\u6301\u8fde\u7eed\u54cd\u5e94": 23, "\u4f46\u6211\u4eec\u7684\u5e73\u53f0\u4e5f\u5141\u8bb8\u7528\u6237\u6539\u53d8\u6b64\u56e0\u7d20": 23, "\u4f46\u66f4\u9ad8\u7ea7\u522b\u7684\u533a\u522b\u662f": 23, "\u4f46\u6839\u636e\u98ce\u9669\u538c\u6076": 23, "\u4f53\u80b2": 23, "\u4f5c\u4e3a\u6570\u636e": 23, "\u4f5c\u4e3a\u771f\u5b9e\u4fe1\u5ff5": 23, "\u4f5c\u4e3a\u8865\u5145\u6307\u6807": 23, "\u4f5c\u8005": 23, "\u4f7f\u7528": 23, "\u4f7f\u7528\u4e8b\u4ef6\u7ea7\u533a\u5206\u5ea6\u53c2\u6570\u7684\u52a0\u6743\u8bc4\u5206\u89c4\u5219": 23, "\u4f7f\u7528\u7684\u65b9\u6cd5": 23, "\u4f8b\u5982": 23, "\u4f8b\u5982brier": 23, "\u4f8b\u5982\u5728\u8bbe\u8ba1rl\u5956\u52b1\u51fd\u6570": 23, "\u4f8b\u5982\u5bf9\u6570": 23, "\u4f8b\u5982\u76f4\u63a5\u4f7f\u7528brier": 23, "\u503c\u5f97\u6ce8\u610f\u7684\u662f": 23, "\u50cf": 23, "\u50cfbrier": 23, "\u5168\u6709\u6216\u5168\u65e0": 23, "\u5171\u540c\u51b3\u5b9a": 23, "\u5176\u4e2d": 23, "\u5176\u4e2d\u6536\u76ca\u5c31\u662f\u5f53\u7ed3\u679c": 23, "\u5176\u603b\u548c\u4e3a1": 23, "\u5177\u4f53\u6765\u8bf4": 23, "\u5177\u6709\u66f4\u5f3a\u7684\u9884\u6d4b\u80fd\u529b": 23, "\u5206\u522b\u662f\u83b7\u80dc\u56e2\u961f\u548c\u5931\u8d25\u56e2\u961f\u7684\u603b\u548c": 23, "\u5206\u6570": 23, "\u5206\u6570\u8d8a\u4f4e\u8868\u793a\u51c6\u786e\u6027\u548c\u6821\u51c6\u6027\u8d8a\u597d": 23, "\u5206\u914d\u7ed9\u5931\u8d25\u56e2\u961f": 23, "\u5206\u914d\u7ed9\u83b7\u80dc\u56e2\u961f": 23, "\u521b\u5efa\u7528\u4e8e\u8bc4\u4f30\u5927\u8bed\u8a00\u6a21\u578b": 23, "\u521d\u6b65\u7684\u5b9e\u8bc1\u7ed3\u679c\u8868\u660e": 23, "\u5305\u4e2d\u63d0\u4f9b\u4e86\u5176\u4ed6\u9002\u5f53\u7684\u8bc4\u5206\u89c4\u5219": 23, "\u5305\u4e2d\u7684\u5185\u7f6e\u51fd\u6570\u521b\u5efa\u6b64\u7c7b\u56fe\u8868\u65e2\u7b80\u5355\u53c8\u9ad8\u6548": 23, "\u5339\u914d\u5f97\u6709\u591a\u597d": 23, "\u5373": 23, "\u5373\u4e0a\u8ff0\u4e24\u79cd\u5b9e\u73b0": 23, "\u5373\u4f7firt\u6a21\u578b\u62df\u5408\u9700\u8981\u6269\u5927\u9884\u6d4b\u4e8b\u4ef6\u6570\u91cf\u548cllm\u6570\u91cf": 23, "\u53c8\u7531": 23, "\u53cc\u53c2\u6570\u903b\u8f91": 23, "\u53d1\u751f": 23, "\u53d1\u751f\u65f6\u4e3a1": 23, "\u53d1\u751f\u65f6\u7684": 23, "\u53e6\u4e00\u65b9\u9762": 23, "\u53ea\u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u4f8b\u5b50": 23, "\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u4e2a\u5411\u91cf": 23, "\u53ef\u4ee5\u89e3\u91ca\u4e3a\u4eba\u7c7b\u5171\u8bc6\u6982\u7387": 23, "\u53ef\u64cd\u4f5c\u7684\u89c1\u89e3": 23, "\u53ef\u9884\u6d4b": 23, "\u5404\u536050": 23, "\u5408\u7ea6\u7684\u5e02\u573a\u5171\u8bc6\u4ef7\u683c": 23, "\u540c\u65f6\u8bc4\u4f30\u51c6\u786e\u6027\u548c\u6821\u51c6\u6027": 23, "\u540c\u6837": 23, "\u540e\u7eed\u95ee\u9898": 23, "\u5426\u5219\u4e3a0": 23, "\u5426\u5219\u4e3a\u96f6": 23, "\u548c": 23, "\u548c\u4e00\u4e2a\u5931\u8d25\u56e2\u961f": 23, "\u548c\u7403\u9762": 23, "\u548c\u7f6e\u4fe1\u5ea6": 23, "\u54ea\u4e2allm\u56de\u7b54\u5f97\u66f4\u597d": 23, "\u56e0\u4e3a\u4eba\u7c7b\u5728\u8fd9\u4e9b\u95ee\u9898\u4e0a\u4e5f\u5f88\u64c5\u957f": 23, "\u56e0\u4e3a\u5b83\u80fd\u5728\u4eba\u7c7b\u8868\u73b0\u8f83\u5dee\u7684": 23, "\u56e0\u4e3a\u603b\u4f53\u4e0a\u5b83\u5728": 23, "\u56e0\u4e3a\u83b7\u5f97\u4e00\u4e2a\u597d\u7684\u5206\u6570\u8981\u6c42llm\u6bd4\u5927\u591a\u6570\u4eba\u7c7b\u6295\u6ce8\u8005\u8868\u73b0\u5f97": 23, "\u56e0\u6b64": 23, "\u56e0\u6b64\u5b83\u4eec\u901a\u5e38\u9700\u8981\u66f4\u5927\u7684\u6570\u636e\u96c6\u548c\u4ed4\u7ec6\u7684\u6a21\u578b\u62df\u5408\u7a0b\u5e8f": 23, "\u56e0\u6b64\u603b\u9884\u7b97\u662f": 23, "\u56e0\u6b64\u66f4\u96be\u9884\u6d4b": 23, "\u56e2\u961f": 23, "\u5728": 23, "\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u57fa\u4e8e\u8fd9\u4e24\u4e2a\u6307\u6807\u7684\u6392\u540d\u4f1a\u4e0d\u540c": 23, "\u5728\u5b9e\u8df5\u4e2d": 23, "\u5728\u672c\u6587\u4e2d": 23, "\u5728\u6bcf\u4e2a\u4e8b\u4ef6": 23, "\u5728\u6d89\u53ca\u6210\u5bf9\u6bd4\u8f83\u7684\u95ee\u9898": 23, "\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u9884\u6d4b\u5e02\u573a\u4e2d": 23, "\u5728\u7ed3\u679c": 23, "\u5728\u8fd9\u4e24\u79cd\u6781\u7aef\u60c5\u51b5\u4e4b\u95f4\u5e73\u6ed1\u63d2\u503c": 23, "\u5728\u8fd9\u91cc": 23, "\u597d": 23, "\u5982": 23, "\u5982\u4f55\u57fa\u4e8ellm\u7684\u6982\u7387\u6027\u9884\u6d4b\u5bf9\u5176\u8fdb\u884c\u8bc4\u5206\u548c\u6392\u540d": 23, "\u5982\u679c\u6211\u4eec\u8003\u8651\u5e73\u5747\u56de\u62a5\u5206\u6570": 23, "\u5982\u679c\u7ed3\u679c": 23, "\u5b83\u4ecd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a33\u5065\u4e14\u6709\u539f\u5219\u7684\u8bc4\u4f30\u6846\u67b6": 23, "\u5b83\u5728\u9884\u6d4b": 23, "\u5b83\u662f\u4e00\u79cd": 23, "\u5b83\u8054\u5408\u5efa\u6a21\u6bcf\u4e2allm\u7684\u9884\u6d4b\u80fd\u529b\u4ee5\u53ca\u4e8b\u4ef6\u7279\u5b9a\u7684\u96be\u5ea6\u548c\u533a\u5206\u5ea6\u53c2\u6570": 23, "\u5b83\u81ea\u7136\u5730\u63a8\u5e7f\u5230\u4e8c\u5143\u7ed3\u679c\u4e4b\u5916": 23, "\u5b8c\u5168\u6587\u6863\u5316\u5e76\u5f00\u6e90": 23, "\u5b9a\u4e49\u4e3a": 23, "\u5b9e\u8df5\u8005\u975e\u5e38\u5173\u5fc3": 23, "\u5ba2\u89c2\u7b54\u6848\u7684\u57fa\u51c6\u6d4b\u8bd5": 23, "\u5bf9\u4e8e": 23, "\u5bf9\u4e8ellm": 23, "\u5bf9\u4e8e\u4e13\u6ce8\u4e8e\u53ef\u9a8c\u8bc1": 23, "\u5bf9\u4e8e\u4eba\u7c7b\u5e02\u573a\u800c\u8a00": 23, "\u5bf9\u4e8e\u7b2c": 23, "\u5bf9\u5e94\u4e8e\u5b9e\u9645\u53d1\u751f\u7684\u7ed3\u679c": 23, "\u5bf9\u6240\u6709\u9884\u6d4b\u4e8b\u4ef6\u8fdb\u884c\u7b49\u6743\u91cd\u5904\u7406": 23, "\u5bf9\u6570\u6548\u7528": 23, "\u5c06": 23, "\u5c06\u4f20\u7edf\u7684\u6210\u5bf9\u6bd4\u8f83\u65b9\u6cd5": 23, "\u5c06\u8fd9\u4e9b\u4f30\u8ba1\u8f6c\u5316\u4e3a\u5177\u4f53\u884c\u52a8\u901a\u5e38\u9700\u8981\u5c06llm\u7684\u4fe1\u5ff5": 23, "\u5c31\u662f\u5982\u679c\u5b8c\u5168\u9075\u5faallm\u7684\u6982\u7387\u6027\u9884\u6d4b": 23, "\u5c3d\u7ba1llm": 23, "\u5c3d\u7ba1\u5b83\u4eec\u5728\u6570\u5b66\u516c\u5f0f\u4e0a\u6709\u660e\u663e\u5dee\u5f02": 23, "\u5c3d\u7ba1\u7531\u4e8e\u5176\u53ef\u89e3\u91ca\u6027\u548c\u7a33\u5065\u6027": 23, "\u5c3d\u7ba1\u8fd9\u79cd\u63a8\u5e7f\u901a\u8fc7\u5c06\u975e\u6210\u5bf9\u9884\u6d4b\u573a\u666f\u8f6c\u5316\u4e3a\u6210\u5bf9\u6846\u67b6\u5f15\u5165\u4e86\u4eba\u4e3a\u56e0\u7d20": 23, "\u5de7\u5999\u5730\u89c4\u907f\u4e86\u8fd9\u79cd\u6a21\u7cca\u6027": 23, "\u5e02\u573a\u4ef7\u683c\u4e2d\u5f97\u51fa\u7684\u7ed3\u679c\u6982\u7387": 23, "\u5e02\u573a\u8d54\u7387": 23, "\u5e03\u91cc\u5c14\u5206\u6570": 23, "\u5e73\u5747": 23, "\u5e73\u5747\u56de\u62a5\u5206\u6570": 23, "\u5e73\u5747\u56de\u62a5\u53d6\u51b3\u4e8e\u89c2\u5bdf\u7ed3\u679c\u548c\u7b56\u7565": 23, "\u5e73\u5747\u56de\u62a5\u6307\u6807": 23, "\u5e76\u4e14\u4ec5\u6839\u636e\u5176\u4e2a\u4eba\u98ce\u9669\u538c\u6076\u7a0b\u5ea6\u505a\u51fa\u51b3\u7b56": 23, "\u5e76\u4e14\u6211\u4eec\u53ef\u80fd\u4f1a\u53d1\u5e03\u4e00\u7bc7\u72ec\u7acb\u7684\u540e\u7eed\u6587\u7ae0\u6765\u8be6\u7ec6\u4ecb\u7ecd\u6211\u4eec\u7684\u5b9e\u8df5": 23, "\u5e76\u5c06llm\u7684\u9884\u6d4b\u6982\u7387": 23, "\u5e76\u6253\u5305\u8fdb\u6211\u4eec\u72ec\u7acb\u7684python\u5305": 23, "\u5e76\u7528\u4e8e\u5bf9llm\u8fdb\u884c\u6392\u540d": 23, "\u5e76\u89e3\u91ca\u8fd9\u4e9b\u6307\u6807\u5982\u4f55\u5e2e\u52a9\u6211\u4eec\u5728\u9884\u6d4b\u5e02\u573a\u573a\u666f\u4e2d\u7a33\u5065\u5730\u8bc4\u4f30llm\u7684\u8868\u73b0": 23, "\u5e76\u901a\u8fc7\u63a8\u7406\u505a\u51fa\u51c6\u786e\u4e14\u6821\u51c6\u826f\u597d\u7684\u9884\u6d4b": 23, "\u5e7f\u4e49bt\u6a21\u578b": 23, "\u5e7f\u4e49\u7684": 23, "\u5f53\u6211\u4eec\u8ba1\u7b97brier": 23, "\u5f53\u6ca1\u6709\u5355\u4e00\u7ed3\u679c\u7684\u5206\u914d\u6982\u7387\u8d85\u8fc70": 23, "\u5f53\u6d89\u53ca\u5230\u8bc4\u4f30\u6240\u4f7f\u7528\u7684\u6307\u6807\u65f6": 23, "\u5ffd\u7565\u5e02\u573a\u8d54\u7387": 23, "\u603b\u9884\u7b97": 23, "\u6052\u5b9a\u76f8\u5bf9\u98ce\u9669\u538c\u6076": 23, "\u60f3\u8c61\u4ee5\u4e0b\u7b80\u5316\u8bbe\u7f6e": 23, "\u6211\u4eec\u4ece\u4eba\u7c7b\u9884\u6d4b\u5e02\u573a": 23, "\u6211\u4eec\u4f1a\u53d1\u73b0llm": 23, "\u6211\u4eec\u4f7f\u7528bt\u516c\u5f0f\u5bf9": 23, "\u6211\u4eec\u4f7f\u7528\u8bc4\u5206\u89c4\u5219": 23, "\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a\u5047\u8bbe\u573a\u666f": 23, "\u6211\u4eec\u5047\u8bbe\u5728\u6211\u4eec\u7684\u5047\u8bbe\u573a\u666f\u4e2d": 23, "\u6211\u4eec\u5148\u8bbe\u5b9a\u4e00\u4e9b\u80cc\u666f": 23, "\u6211\u4eec\u521b\u65b0\u6027\u5730\u5f15\u5165\u4e86\u4e00\u7c7b": 23, "\u6211\u4eec\u53ef\u80fd\u4f1a\u5c06\u9ed8\u8ba4\u8bc4\u5206\u6307\u6807\u4ece\u5f53\u524d\u7684": 23, "\u6211\u4eec\u5728": 23, "\u6211\u4eec\u5c06": 23, "\u6211\u4eec\u5c06\u5176\u8bb0\u4e3a": 23, "\u6211\u4eec\u5c06\u5f15\u5bfc\u60a8\u4e86\u89e3\u6211\u4eec\u9009\u62e9\u8fd9\u4e9b\u6307\u6807\u80cc\u540e\u7684\u903b\u8f91": 23, "\u6211\u4eec\u5c1a\u672a\u5f7b\u5e95\u63a2\u7d22\u8fd9\u79cd\u5e7f\u4e49bt\u6a21\u578b\u7684\u7edf\u8ba1\u7279\u6027\u548c\u6536\u655b\u4fdd\u8bc1": 23, "\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u89e3\u51b3\u4e00\u4e2a\u4f18\u5316\u95ee\u9898\u6765\u786e\u5b9a\u4e8b\u4ef6": 23, "\u6211\u4eec\u5e0c\u671b\u5bf9\u591a\u4e2a\u4e8b\u4ef6": 23, "\u6211\u4eec\u5e73\u53f0": 23, "\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u6982\u7387\u6700\u9ad8\u7684\u9009\u9879": 23, "\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u79cd\u57fa\u4e8e": 23, "\u6211\u4eec\u7684\u5e73\u5747\u56de\u62a5\u6307\u6807\u901a\u8fc7\u9075\u5faa\u6240\u6709\u4e8b\u4ef6\u7684\u6700\u4f18\u6295\u6ce8\u7b56\u7565": 23, "\u6211\u4eec\u8054\u5408\u4f30\u8ba1\u6bcf\u4e2allm\u7684\u80fd\u529b\u53c2\u6570\u4ee5\u53ca\u6bcf\u4e2a\u9884\u6d4b\u4e8b\u4ef6\u7684": 23, "\u6211\u4eec\u8861\u91cf\u7684\u662fllm\u7684\u6982\u7387\u6027\u9884\u6d4b\u4e0e\u89c2\u5bdf\u7ed3\u679c\u7684\u5bf9\u9f50\u7a0b\u5ea6": 23, "\u6211\u4eec\u8fd8\u7eb3\u5165\u4e86\u5176\u4ed6\u6307\u6807": 23, "\u6211\u4eec\u8fd8\u7eb3\u5165\u4e86\u57fa\u4e8e\u7edf\u8ba1\u7684\u4e25\u8c28\u65b9\u6cd5": 23, "\u6211\u4eec\u91c7\u7528\u98ce\u9669\u4e2d\u6027\u60c5\u51b5": 23, "\u6211\u4eec\u9700\u8981\u6307\u5b9a\u8d85\u53c2\u6570": 23, "\u6216": 23, "\u6216\u5176\u4ed6\u9002\u5f53\u7684\u8bc4\u5206\u89c4\u5219": 23, "\u6216\u8bb8\u57fa\u4e8e\u4ed6\u4eec\u81ea\u5df1\u7684\u98ce\u9669\u504f\u597d": 23, "\u6240\u6709\u4e8b\u4ef6\u5206\u4e3a\u4e24\u7c7b": 23, "\u6240\u6709\u8fd9\u4e9b\u6307\u6807\u90fd\u5df2\u9ad8\u6548\u5b9e\u73b0": 23, "\u6269\u5c55\u5230\u6211\u4eec\u7684\u9884\u6d4b\u5e02\u573a\u8bbe\u7f6e\u4e2d": 23, "\u6295\u6ce8\u591a\u5c11\u94b1": 23, "\u6295\u6ce8\u8005\u6bcf\u6b21\u4e8b\u4ef6\u6709\u56fa\u5b9a\u7684": 23, "\u6307\u5bfc\u539f\u5219\u901a\u5e38\u662f\u4e3a\u7279\u5b9a\u4efb\u52a1\u627e\u5230\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u8bc4\u5206\u65b9\u6cd5": 23, "\u6307\u6807": 23, "\u6355\u6349\u4e86\u6838\u5fc3\u95ee\u9898": 23, "\u6362\u53e5\u8bdd\u8bf4": 23, "\u63d0\u4f9b\u7075\u6d3b\u4f46\u6e05\u6670\u53ef\u89e3\u91ca\u7684\u6295\u6ce8\u7b56\u7565": 23, "\u63d0\u4f9b\u76f4\u89c2\u7684\u6bd4\u8f83\u5206\u6570": 23, "\u6548\u7528\u7406\u8bba": 23, "\u6548\u7528\u7406\u8bba\u548c\u5fc3\u7406\u6d4b\u91cf\u5b66\u539f\u7406\u7684\u6307\u6807": 23, "\u65e5\u671f": 23, "\u65f6": 23, "\u65f6\u5c24\u5176\u6709\u7528": 23, "\u662f\u4e00\u4e2a\u98ce\u9669\u538c\u6076\u8d85\u53c2\u6570": 23, "\u662f\u4e00\u4efd": 23, "\u662f\u4e00\u79cd": 23, "\u662f\u5728\u4e8b\u4ef6": 23, "\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u8bc4\u5206\u65b9\u6cd5": 23, "\u662f\u6295\u6ce8\u540e\u8d5a\u53d6\u7684\u91d1\u989d": 23, "\u662f\u6839\u636e\u6700\u5927\u5316\u6295\u6ce8\u8005\u7684\u671f\u671b\u6548\u7528\u6765\u5b9a\u4e49\u7684": 23, "\u6700\u4f18\u6027": 23, "\u6700\u4f18\u6295\u6ce8\u7b56\u7565": 23, "\u6700\u7ec8": 23, "\u6700\u7ec8\u7684\u8bc4\u5206\u53ef\u4ee5\u662f": 23, "\u6700\u8fd1\u7684\u4e00\u4e9b\u5b66\u672f\u5de5\u4f5c\u4e5f\u63a2\u8ba8\u4e86\u8bc4\u5206\u89c4\u5219\u5728llm\u4e2d\u7684\u5e94\u7528": 23, "\u6709": 23, "\u6709\u4e24\u4e2allm": 23, "\u6709\u65f6\u79f0\u4e3a": 23, "\u672a\u52a0\u6743": 23, "\u6765\u8861\u91cf\u957f\u671f\u56de\u62a5\u7387": 23, "\u6765\u8ba1\u7b97": 23, "\u6765\u8ba1\u7b97\u9884\u6d4b\u7684\u51c6\u786e\u6027": 23, "\u6982\u7387": 23, "\u6982\u7387\u7684\u7ed3\u679c\u5b9e\u9645\u4e0a\u5927\u7ea6\u572870": 23, "\u6b63\u662f\u5728\u4e8e\u6211\u4eec\u5168\u9762\u7684\u8bc4\u5206\u4e0e\u6392\u540d\u6a21\u5757": 23, "\u6b63\u786e": 23, "\u6b64\u5916": 23, "\u6bcf\u4e2a\u4e8b\u4ef6\u7ed3\u679c\u88ab\u89c6\u4e3a\u4e24\u4e2a": 23, "\u6bcf\u4e2a\u53c2\u4e0e\u7684llm\u6839\u636e\u5176\u9884\u6d4b\u6982\u7387\u8d21\u732e\u5176\u80fd\u529b\u7684\u4e00\u90e8\u5206": 23, "\u6bcf\u6b21\u4e8b\u4ef6\u4f7f\u7528\u76f8\u540c\u7684\u9884\u7b97": 23, "\u6bd4\u5982\u7ed3\u679c": 23, "\u7136\u540e": 23, "\u7136\u800c": 23, "\u7279\u522b\u662fbrier": 23, "\u7279\u522b\u662f\u5728\u5904\u7406\u591a\u4e2a\u7ed3\u679c": 23, "\u73b0\u5728": 23, "\u73b0\u5728\u662f\u65f6\u5019\u53cd\u601d\u5e76\u6bd4\u8f83\u8fc4\u4eca\u4e3a\u6b62\u4ecb\u7ecd\u7684\u4e24\u4e2a\u91cd\u8981\u6307\u6807\u4e86": 23, "\u7684": 23, "\u7684brier": 23, "\u7684llm\u6982\u7387\u6027\u9884\u6d4b\u8fdb\u884c\u8bc4\u5206": 23, "\u7684\u4e00\u4e2a\u72ec\u7279\u4f18\u52bf": 23, "\u7684\u4e00\u79cd\u8f7b\u5fae\u53d8\u4f53": 23, "\u7684\u4e09\u6761\u79fb\u52a8": 23, "\u7684\u4e2d\u95f4\u503c\u4ee3\u8868\u4e0d\u540c\u7a0b\u5ea6\u7684\u98ce\u9669\u538c\u6076": 23, "\u7684\u5206\u6570\u4f1a\u6bd4": 23, "\u7684\u57fa\u51c6\u548c\u7ade\u6280\u573a\u901a\u5e38\u662f\u4e00\u4e2a\u52b3\u52a8\u5bc6\u96c6\u4e14\u7ec6\u81f4\u7684\u8fc7\u7a0b": 23, "\u7684\u6295\u6ce8\u8005\u4f1a\u6839\u636ellm\u7684\u6982\u7387\u6309\u6bd4\u4f8b\u5206\u914d\u4ed6\u4eec\u7684\u9884\u7b97": 23, "\u7684\u65b0\u65b9\u6cd5": 23, "\u7684\u65f6\u95f4\u91cc\u53d1\u751f": 23, "\u7684\u6700\u4f18\u7b56\u7565": 23, "\u7684\u76f4\u89c2\u89e3\u91ca\u4f7f\u5176\u6210\u4e3a\u6211\u4eec\u7684\u4e3b\u8981\u8bc4\u4f30\u6307\u6807": 23, "\u7684\u7ed3\u679c": 23, "\u7684\u83b7\u80dc\u6982\u7387\u8fdb\u884c\u5efa\u6a21": 23, "\u76f4\u89c2\u4e0a": 23, "\u76f8\u5bf9\u6307\u6807": 23, "\u76f8\u5bf9\u66f4\u597d": 23, "\u7b2c": 23, "\u7b56\u7565": 23, "\u7b80\u5355\u6765\u8bf4": 23, "\u7c7b\u522b\u7684\u4e8b\u4ef6\u76f8\u5bf9\u66f4": 23, "\u7ebf\u6027\u6548\u7528": 23, "\u7ed9\u5b9a\u4ed6\u4eec\u7684\u98ce\u9669\u538c\u6076": 23, "\u7edd\u5bf9\u610f\u4e49\u4e0a": 23, "\u7edd\u5bf9\u6307\u6807": 23, "\u800c": 23, "\u800c\u4e0d\u662f\u76f4\u63a5\u7684\u6295\u6ce8\u5efa\u8bae": 23, "\u800c\u5728\u9884\u6d4b": 23, "\u800c\u5e73\u5747\u56de\u62a5\u5206\u6570\u662f\u4e00\u79cd": 23, "\u800c\u7b56\u7565": 23, "\u80fd\u529b": 23, "\u83b7\u53d6\u6b64\u4fe1\u606f": 23, "\u867d\u7136\u4f20\u7edf\u76842": 23, "\u867d\u7136\u8be6\u7ec6\u7684\u63a8\u5bfc\u8d85\u51fa\u4e86\u672c\u6587\u7684\u8303\u56f4": 23, "\u884c\u52a8": 23, "\u8868\u793a\u4e8b\u4ef6": 23, "\u8868\u793a\u5bf9\u6570\u98ce\u9669\u538c\u6076": 23, "\u8868\u793a\u98ce\u9669\u4e2d\u6027\u4e2a\u4f53": 23, "\u88ab\u9884\u6d4b\u4e3a70": 23, "\u89c2\u5bdf\u5230\u7684\u7ed3\u679c": 23, "\u89e3\u51b3\u4e86\u7b80\u5355\u8bc4\u5206\u65b9\u6cd5\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u5c40\u9650\u6027": 23, "\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u4ee5\u5c01\u95ed\u4e14\u53ef\u89e3\u91ca\u7684\u5f62\u5f0f\u8868\u8fbe": 23, "\u8bc4\u4f30\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u5bf9\u6240\u6709\u95ee\u9898\u7684\u4e8c\u5143\u6b63\u786e\u6027\u53d6\u5e73\u5747\u503c\u6765\u5f97\u5230\u4e00\u4e2a\u51c6\u786e\u7387\u6307\u6807": 23, "\u8bc4\u5206\u89c4\u5219\u901a\u8fc7\u76f4\u63a5\u8861\u91cf\u9884\u6d4b\u6982\u7387\u4e0e\u89c2\u5bdf\u7ed3\u679c\u7684\u63a5\u8fd1\u7a0b\u5ea6": 23, "\u8bda\u7136": 23, "\u8be5\u5408\u7ea6\u652f\u4ed8\u4e00\u7f8e\u5143": 23, "\u8be5\u6307\u6807\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ecb\u4e8e0\u548c1\u4e4b\u95f4\u7684\u6e05\u6670\u6570\u503c\u5206\u6570": 23, "\u8be5\u6a21\u5757\u5b9e\u73b0\u4e86\u591a\u79cd\u57fa\u4e8e\u7edf\u8ba1\u5efa\u6a21": 23, "\u8be5\u98ce\u9669\u538c\u6076\u7a0b\u5ea6\u7531crra\u6548\u7528\u51fd\u6570\u6355\u6349": 23, "\u8be6\u7ec6\u8bf4\u660e\u5982\u4e0b": 23, "\u8d8a\u5c0f\u8d8a\u597d": 23, "\u8f83\u9ad8\u7684\u533a\u5206\u5ea6\u53c2\u6570\u8868\u793a\u90a3\u4e9b\u80fd\u66f4\u6709\u6548\u533a\u5206\u5f3a\u5f31\u9884\u6d4b\u8005\u7684\u4e8b\u4ef6": 23, "\u8fbe\u5230\u9ad8\u5ea6\u76f8\u5173": 23, "\u8fc1\u79fb\u5230\u57fa\u4e8eirt\u7684\u52a0\u6743\u7248\u672c": 23, "\u8fd8\u662f\u62d2\u7edd\u505a\u51fa\u786e\u5b9a\u6027\u731c\u6d4b": 23, "\u8fd8\u6709\u4e24\u4e2a\u56e0\u7d20\u4f1a\u5f71\u54cd": 23, "\u8fd9\u4e00\u4e8b\u4ef6": 23, "\u8fd9\u4e00\u95ee\u9898\u5f15\u5165\u4e86\u66f4\u591a\u7684\u590d\u6742\u6027\u548c\u7ec6\u5fae\u5dee\u522b": 23, "\u8fd9\u4e9b\u6307\u6807\u6a21\u62df\u4e86\u67d0\u4eba\u6301\u7eed\u7eaf\u7cb9\u57fa\u4e8ellm\u7684\u6982\u7387\u4f30\u8ba1\u8fdb\u884c\u6295\u6ce8\u7684\u957f\u671f\u56de\u62a5": 23, "\u8fd9\u4e9b\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\u6a21\u578b\u62df\u5408": 23, "\u8fd9\u4e9b\u662f\u4ece": 23, "\u8fd9\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8eelo\u8bc4\u5206\u7684\u8bc4\u5206\u7cfb\u7edf": 23, "\u8fd9\u6837\u7684\u6d41\u884c\u73b0\u5b9e\u4e16\u754c\u9884\u6d4b\u5e73\u53f0\u4e5f\u5e7f\u6cdb\u91c7\u7528brier": 23, "\u8fd9\u786e\u4fdd\u4e86\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u53ef\u9760\u6027": 23, "\u8fd9\u79cd": 23, "\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u7075\u6d3b": 23, "\u8fd9\u8868\u660e\u5b83\u5728\u9884\u6d4b\u5e02\u573a\u4e2d\u5177\u6709\u957f\u671f\u786e\u7acb\u7684\u5b9e\u7528\u6027": 23, "\u8fd9\u91cc\u768470": 23, "\u9002\u5f53\u7684\u8bc4\u5206\u89c4\u5219\u672c\u8d28\u4e0a\u4f1a\u5956\u52b1\u90a3\u4e9b\u65e2\u51c6\u786e\u53c8\u6821\u51c6\u826f\u597d\u7684\u6a21\u578b": 23, "\u9002\u5f53\u8bc4\u5206\u89c4\u5219": 23, "\u9009\u62e9\u5408\u9002\u7684\u6307\u6807\u6210\u4e3a\u4e00\u4e2a\u975e\u5e73\u51e1\u4f46\u53c8\u5f15\u4eba\u5165\u80dc\u7684\u6311\u6218": 23, "\u901a\u8fc7\u5bf9\u6240\u6709\u4e8b\u4ef6\u8ba1\u7b97\u5f97\u5230": 23, "\u91d1\u878d": 23, "\u9519\u8bef": 23, "\u9664\u4e86\u524d\u9762\u63d0\u5230\u7684\u6307\u6807\u5916": 23, "\u9664\u4e86\u6548\u7528\u51fd\u6570\u5916": 23, "\u968f\u7740\u65f6\u95f4\u63a8\u79fb": 23, "\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u9884\u6d4b\u4e8b\u4ef6\u5173\u95ed": 23, "\u9690\u542b\u6982\u7387": 23, "\u96be\u5ea6\u548c\u533a\u5206\u5ea6\u53c2\u6570": 23, "\u9884\u6d4b\u7684\u6982\u7387\u5206\u5e03\u4e0e\u73b0\u5b9e": 23, "\u9884\u7b97": 23, "\u9884\u8ba1": 23, "\u9884\u8ba1\u9605\u8bfb\u65f6\u95f4": 23, "\u98ce\u9669\u4e2d\u6027": 23, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 23}, "titles": ["algo", "bootstrap", "data", "API Reference", "plot", "plot_timestamp", "src.pm_rank.data.base", "src.pm_rank.data", "src.pm_rank.data.loaders", "src.pm_rank.data.utils", "src.pm_rank", "src.pm_rank.model.average_return", "src.pm_rank.model.bradley_terry", "src.pm_rank.model.calibration", "src.pm_rank.model", "src.pm_rank.model.irt", "src.pm_rank.model.scoring_rule", "src.pm_rank.model.utils", "test_algo", "test_bootstrap", "test_calibration", "utils", "How We Score &amp; Rank LLMs in Prophet Arena", "\u6211\u4eec\u5982\u4f55\u5728\u9884\u6d4b\u5e02\u573a\u4e2d\u5bf9\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u8fdb\u884c\u8bc4\u5206\u4e0e\u6392\u540d", "Colab Demo", "PM-RANK Documentation"], "titleterms": {"about": 22, "absolut": 22, "algo": 0, "api": 3, "arena": 22, "attribut": [0, 2, 4, 5, 6, 16, 17, 18], "averag": 22, "average_return": 11, "base": 6, "bootstrap": 1, "bradlei": [22, 23], "bradley_terri": 12, "bt": [22, 23], "calibr": 13, "care": 22, "class": [2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17], "colab": 24, "concept": 25, "content": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "core": 25, "data": [2, 6, 7, 8, 9], "demo": 24, "differ": 22, "document": 25, "dr": [22, 23], "exampl": 22, "function": [0, 1, 2, 4, 5, 9, 10, 14, 17, 18, 19, 20, 21], "gener": 22, "googl": 24, "ground": 22, "guid": 25, "how": 22, "hurri": 22, "instal": 25, "interact": 24, "irt": [15, 22, 23], "item": 22, "len": 22, "llm": [22, 23], "loader": 8, "metric": 22, "might": 22, "model": [11, 12, 13, 14, 15, 16, 17, 22], "modul": [0, 1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21], "packag": [7, 10, 14, 15], "plot": 4, "plot_timestamp": 5, "pm": 25, "pm_rank": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "practition": 22, "predict": 22, "probabilist": 22, "prophet": 22, "quick": 25, "rank": [22, 25], "reader": 22, "refer": [3, 22], "rel": 22, "respons": 22, "return": 22, "rule": 22, "score": 22, "scoring_rul": 16, "src": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "statist": 22, "submodul": [7, 10, 14], "terri": [22, 23], "test_algo": 18, "test_bootstrap": 19, "test_calibr": 20, "theori": 22, "tl": [22, 23], "util": [9, 17, 21], "versu": 22, "we": 22, "what": 22, "when": 22, "would": 22, "\u4e0e": 23, "\u53c2\u8003\u6587\u732e": 23, "\u5b9e\u8df5\u8005\u53ef\u80fd\u5173\u5fc3\u7684\u5185\u5bb9": 23, "\u5e73\u5747\u56de\u62a5": 23, "\u5e7f\u4e49": 23, "\u6211\u4eec\u5982\u4f55\u5728\u9884\u6d4b\u5e02\u573a\u4e2d\u5bf9\u5927\u8bed\u8a00\u6a21\u578b": 23, "\u6982\u7387\u6027\u9884\u6d4b\u7684\u575a\u5b9e\u6307\u6807": 23, "\u6a21\u578b": 23, "\u7ed9\u65f6\u95f4\u7d27\u8feb\u7684\u8bfb\u8005": 23, "\u7edd\u5bf9\u6307\u6807\u4e0e\u76f8\u5bf9\u6307\u6807": 23, "\u7edf\u8ba1\u5efa\u6a21\u7684\u89c6\u89d2": 23, "\u8bc4\u5206\u89c4\u5219": 23, "\u8fdb\u884c\u8bc4\u5206\u4e0e\u6392\u540d": 23, "\u9879\u76ee\u53cd\u5e94\u7406\u8bba": 23}})